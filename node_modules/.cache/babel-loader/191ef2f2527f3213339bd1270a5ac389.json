{"ast":null,"code":"import { ERC20Interface } from '../constants';\nimport { useContractCalls } from './useContractCall';\nexport function useToken(tokenAddress) {\n  var _a, _b;\n\n  const partialCall = {\n    abi: ERC20Interface,\n    address: tokenAddress || '',\n    args: []\n  };\n  const args = ['name', 'symbol', 'decimals', 'totalSupply'].map(method => Object.assign(Object.assign({}, partialCall), {\n    method\n  }));\n  const [name, symbol, decimals, totalSupply] = useContractCalls(args);\n\n  if (!name && !symbol && !decimals && !totalSupply) {\n    return undefined;\n  }\n\n  return {\n    name: (_a = name === null || name === void 0 ? void 0 : name[0]) !== null && _a !== void 0 ? _a : '',\n    symbol: (_b = symbol === null || symbol === void 0 ? void 0 : symbol[0]) !== null && _b !== void 0 ? _b : '',\n    decimals: decimals === null || decimals === void 0 ? void 0 : decimals[0],\n    totalSupply: totalSupply === null || totalSupply === void 0 ? void 0 : totalSupply[0]\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,cAAT,QAA+B,cAA/B;AAEA,SAAuBC,gBAAvB,QAA+C,mBAA/C;AAGA,OAAM,SAAUC,QAAV,CAAmBC,YAAnB,EAA+C;;;AACnD,QAAMC,WAAW,GAAG;AAClBC,OAAG,EAAEL,cADa;AAElBM,WAAO,EAAEH,YAAY,IAAI,EAFP;AAGlBI,QAAI,EAAE;AAHY,GAApB;AAKA,QAAMA,IAAI,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,UAAnB,EAA+B,aAA/B,EAA8CC,GAA9C,CAAmDC,MAAD,IAA0BC,gCAAMN,WAAN,GAAiB;AAAEK;AAAF,GAAjB,CAA5E,CAAb;AACA,QAAM,CAACE,IAAD,EAAOC,MAAP,EAAeC,QAAf,EAAyBC,WAAzB,IAAwCb,gBAAgB,CAACM,IAAD,CAA9D;;AAEA,MAAI,CAACI,IAAD,IAAS,CAACC,MAAV,IAAoB,CAACC,QAArB,IAAiC,CAACC,WAAtC,EAAmD;AACjD,WAAOC,SAAP;AACD;;AAED,SAAO;AACLJ,QAAI,QAAEA,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAG,CAAH,CAAN,MAAU,IAAV,IAAUK,aAAV,GAAUA,EAAV,GAAe,EADd;AAELJ,UAAM,QAAEA,MAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAG,CAAH,CAAR,MAAY,IAAZ,IAAYK,aAAZ,GAAYA,EAAZ,GAAiB,EAFlB;AAGLJ,YAAQ,EAAEA,QAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAG,CAAH,CAHb;AAILC,eAAW,EAAEA,WAAW,SAAX,eAAW,WAAX,GAAW,MAAX,cAAW,CAAG,CAAH;AAJnB,GAAP;AAMD","names":["ERC20Interface","useContractCalls","useToken","tokenAddress","partialCall","abi","address","args","map","method","Object","name","symbol","decimals","totalSupply","undefined","_a","_b"],"sources":["/home/vukasin/Desktop/LuckySixFront/node_modules/@usedapp/core/src/hooks/useToken.ts"],"sourcesContent":["import { ERC20Interface } from '../constants'\nimport { Falsy } from '../model/types'\nimport { ContractCall, useContractCalls } from './useContractCall'\nimport { TokenInfo } from '../model/TokenInfo'\n\nexport function useToken(tokenAddress: string | Falsy): TokenInfo | undefined {\n  const partialCall = {\n    abi: ERC20Interface,\n    address: tokenAddress || '',\n    args: [],\n  }\n  const args = ['name', 'symbol', 'decimals', 'totalSupply'].map((method): ContractCall => ({ ...partialCall, method }))\n  const [name, symbol, decimals, totalSupply] = useContractCalls(args)\n\n  if (!name && !symbol && !decimals && !totalSupply) {\n    return undefined\n  }\n\n  return {\n    name: name?.[0] ?? '',\n    symbol: symbol?.[0] ?? '',\n    decimals: decimals?.[0],\n    totalSupply: totalSupply?.[0],\n  }\n}\n"]},"metadata":{},"sourceType":"module"}