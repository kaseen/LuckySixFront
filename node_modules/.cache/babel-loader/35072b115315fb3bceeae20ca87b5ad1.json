{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useWeb3React } from \"@web3-react/core\";\nimport { ethers } from \"ethers\";\nimport LuckySix from \"../dependencies/LuckySix.json\";\nimport contractsMap from \"../contractsMap.json\";\nexport const OnlyOwner = () => {\n  _s();\n\n  const {\n    library\n  } = useWeb3React();\n  const {\n    abi\n  } = LuckySix;\n\n  async function _getState() {\n    //const signer = library.getSigner()\n    const contractAddress = contractsMap[42][\"LuckySix\"][0];\n    const contract = new ethers.Contract(contractAddress, abi, ethers.getDefaultProvider('kovan'));\n\n    try {\n      const x = Number(await contract.lottery_state());\n\n      switch (x) {\n        case 0:\n          console.log(\"OPEN\");\n          break;\n\n        case 1:\n          console.log(\"CLOSED\");\n          break;\n\n        case 2:\n          console.log(\"CALCULATING_WINNER\");\n          break;\n      }\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function _getBalance() {\n    const signer = library.getSigner();\n    const contractAddress = contractsMap[42][\"LuckySix\"][0];\n    const contract = new ethers.Contract(contractAddress, abi, signer);\n\n    try {\n      console.log(\"ETH balance: \" + (await contract.getETHBalance()) / 10 ** 18);\n      console.log(\"LINK balance: \" + (await contract.getLINKBalance()) / 10 ** 18);\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function _startLottery() {\n    const signer = library.getSigner();\n    const contractAddress = contractsMap[42][\"LuckySix\"][0];\n    const contract = new ethers.Contract(contractAddress, abi, signer);\n\n    try {\n      await contract.startLottery();\n      console.log(\"Lottery Started\");\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function _getDrawnNumbers() {\n    const signer = library.getSigner(); //const provider = new ethers.providers.JsonRpcProvider(42)\n    //const signer = new ethers.Wallet(\"0x5E20Aee97eDa500FbdFD1F3F863318d2bfA51ef3\")\n\n    const contractAddress = contractsMap[42][\"LuckySix\"][0];\n    const contract = new ethers.Contract(contractAddress, abi, signer);\n\n    try {\n      return await contract.getDrawnNumbers();\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function _endLottery() {\n    const signer = library.getSigner();\n    const contractAddress = contractsMap[42][\"LuckySix\"][0];\n    const contract = new ethers.Contract(contractAddress, abi, signer);\n\n    try {\n      await contract.endLottery();\n      console.log(\"Calculating Winner...\");\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function _payout() {\n    const signer = library.getSigner();\n    const contractAddress = contractsMap[42][\"LuckySix\"][0];\n    const contract = new ethers.Contract(contractAddress, abi, signer);\n\n    try {\n      await contract.payout();\n      console.log(\"PAYOUT\");\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  return {\n    _getState,\n    _getBalance,\n    _startLottery,\n    _endLottery,\n    _payout,\n    _getDrawnNumbers\n  };\n};\n\n_s(OnlyOwner, \"x7m7a80swTujuMnrOOSksccFILo=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = OnlyOwner;\nexport default OnlyOwner;\n\nvar _c;\n\n$RefreshReg$(_c, \"OnlyOwner\");","map":{"version":3,"sources":["/home/vukasin/Desktop/LuckySixFront/src/hooks/hookOnlyOwner.tsx"],"names":["useWeb3React","ethers","LuckySix","contractsMap","OnlyOwner","library","abi","_getState","contractAddress","contract","Contract","getDefaultProvider","x","Number","lottery_state","console","log","ex","_getBalance","signer","getSigner","getETHBalance","getLINKBalance","_startLottery","startLottery","_getDrawnNumbers","getDrawnNumbers","_endLottery","endLottery","_payout","payout"],"mappings":";;AAAA,SAAQA,YAAR,QAA2B,kBAA3B;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAE3B,QAAM;AAACC,IAAAA;AAAD,MAAYL,YAAY,EAA9B;AAEA,QAAM;AAACM,IAAAA;AAAD,MAAQJ,QAAd;;AAEA,iBAAeK,SAAf,GAA0B;AACtB;AACA,UAAMC,eAAe,GAAGL,YAAY,CAAC,EAAD,CAAZ,CAAiB,UAAjB,EAA6B,CAA7B,CAAxB;AACA,UAAMM,QAAQ,GAAG,IAAIR,MAAM,CAACS,QAAX,CAAoBF,eAApB,EAAqCF,GAArC,EAA0CL,MAAM,CAACU,kBAAP,CAA0B,OAA1B,CAA1C,CAAjB;;AACA,QAAG;AACC,YAAMC,CAAC,GAAGC,MAAM,CAAC,MAAMJ,QAAQ,CAACK,aAAT,EAAP,CAAhB;;AACA,cAAOF,CAAP;AACI,aAAK,CAAL;AACIG,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA;;AACJ,aAAK,CAAL;AACID,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA;;AACJ,aAAK,CAAL;AACID,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA;AATR;AAWH,KAbD,CAaC,OAAMC,EAAN,EAAS;AACNF,MAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACH;AACJ;;AAED,iBAAeC,WAAf,GAA4B;AACxB,UAAMC,MAAM,GAAGd,OAAO,CAACe,SAAR,EAAf;AACA,UAAMZ,eAAe,GAAGL,YAAY,CAAC,EAAD,CAAZ,CAAiB,UAAjB,EAA6B,CAA7B,CAAxB;AACA,UAAMM,QAAQ,GAAG,IAAIR,MAAM,CAACS,QAAX,CAAoBF,eAApB,EAAqCF,GAArC,EAA0Ca,MAA1C,CAAjB;;AAEA,QAAG;AACCJ,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB,OAAMP,QAAQ,CAACY,aAAT,EAAN,IAAiC,MAAM,EAArE;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmB,OAAMP,QAAQ,CAACa,cAAT,EAAN,IAAkC,MAAM,EAAvE;AACH,KAHD,CAGC,OAAML,EAAN,EAAS;AACNF,MAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACH;AACJ;;AAED,iBAAeM,aAAf,GAA8B;AAC1B,UAAMJ,MAAM,GAAGd,OAAO,CAACe,SAAR,EAAf;AACA,UAAMZ,eAAe,GAAGL,YAAY,CAAC,EAAD,CAAZ,CAAiB,UAAjB,EAA6B,CAA7B,CAAxB;AACA,UAAMM,QAAQ,GAAG,IAAIR,MAAM,CAACS,QAAX,CAAoBF,eAApB,EAAqCF,GAArC,EAA0Ca,MAA1C,CAAjB;;AAEA,QAAG;AACC,YAAMV,QAAQ,CAACe,YAAT,EAAN;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,KAHD,CAGC,OAAMC,EAAN,EAAS;AACNF,MAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACH;AACJ;;AAED,iBAAeQ,gBAAf,GAAiC;AAC7B,UAAMN,MAAM,GAAGd,OAAO,CAACe,SAAR,EAAf,CAD6B,CAE7B;AACA;;AACA,UAAMZ,eAAe,GAAGL,YAAY,CAAC,EAAD,CAAZ,CAAiB,UAAjB,EAA6B,CAA7B,CAAxB;AACA,UAAMM,QAAQ,GAAG,IAAIR,MAAM,CAACS,QAAX,CAAoBF,eAApB,EAAqCF,GAArC,EAA0Ca,MAA1C,CAAjB;;AACA,QAAG;AACC,aAAO,MAAMV,QAAQ,CAACiB,eAAT,EAAb;AACH,KAFD,CAEC,OAAMT,EAAN,EAAS;AACNF,MAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACH;AACJ;;AAED,iBAAeU,WAAf,GAA4B;AACxB,UAAMR,MAAM,GAAGd,OAAO,CAACe,SAAR,EAAf;AACA,UAAMZ,eAAe,GAAGL,YAAY,CAAC,EAAD,CAAZ,CAAiB,UAAjB,EAA6B,CAA7B,CAAxB;AACA,UAAMM,QAAQ,GAAG,IAAIR,MAAM,CAACS,QAAX,CAAoBF,eAApB,EAAqCF,GAArC,EAA0Ca,MAA1C,CAAjB;;AAEA,QAAG;AACC,YAAMV,QAAQ,CAACmB,UAAT,EAAN;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH,KAHD,CAGC,OAAMC,EAAN,EAAS;AACNF,MAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACH;AACJ;;AAED,iBAAeY,OAAf,GAAwB;AACpB,UAAMV,MAAM,GAAGd,OAAO,CAACe,SAAR,EAAf;AACA,UAAMZ,eAAe,GAAGL,YAAY,CAAC,EAAD,CAAZ,CAAiB,UAAjB,EAA6B,CAA7B,CAAxB;AACA,UAAMM,QAAQ,GAAG,IAAIR,MAAM,CAACS,QAAX,CAAoBF,eAApB,EAAqCF,GAArC,EAA0Ca,MAA1C,CAAjB;;AAEA,QAAG;AACC,YAAMV,QAAQ,CAACqB,MAAT,EAAN;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,KAHD,CAGC,OAAMC,EAAN,EAAS;AACNF,MAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACH;AACJ;;AAED,SAAO;AAACV,IAAAA,SAAD;AAAYW,IAAAA,WAAZ;AAAyBK,IAAAA,aAAzB;AAAwCI,IAAAA,WAAxC;AAAqDE,IAAAA,OAArD;AAA8DJ,IAAAA;AAA9D,GAAP;AACH,CA9FM;;GAAMrB,S;UAESJ,Y;;;KAFTI,S;AAgGb,eAAeA,SAAf","sourcesContent":["import {useWeb3React} from \"@web3-react/core\"\nimport {ethers} from \"ethers\"\nimport LuckySix from \"../dependencies/LuckySix.json\"\nimport contractsMap from \"../contractsMap.json\"\n\n\nexport const OnlyOwner = () => {\n\n    const {library} = useWeb3React()\n\n    const {abi} = LuckySix\n\n    async function _getState(){\n        //const signer = library.getSigner()\n        const contractAddress = contractsMap[42][\"LuckySix\"][0]\n        const contract = new ethers.Contract(contractAddress, abi, ethers.getDefaultProvider('kovan'))\n        try{\n            const x = Number(await contract.lottery_state())\n            switch(x){\n                case 0: \n                    console.log(\"OPEN\")\n                    break\n                case 1: \n                    console.log(\"CLOSED\")\n                    break\n                case 2:\n                    console.log(\"CALCULATING_WINNER\")\n                    break\n            }\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n   \n    async function _getBalance(){\n        const signer = library.getSigner()\n        const contractAddress = contractsMap[42][\"LuckySix\"][0]\n        const contract = new ethers.Contract(contractAddress, abi, signer)\n\n        try{\n            console.log(\"ETH balance: \" + await contract.getETHBalance() / 10 ** 18)\n            console.log(\"LINK balance: \" + await contract.getLINKBalance() / 10 ** 18)\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n    \n    async function _startLottery(){\n        const signer = library.getSigner()\n        const contractAddress = contractsMap[42][\"LuckySix\"][0]\n        const contract = new ethers.Contract(contractAddress, abi, signer)\n\n        try{\n            await contract.startLottery()\n            console.log(\"Lottery Started\")\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n\n    async function _getDrawnNumbers(){\n        const signer = library.getSigner()\n        //const provider = new ethers.providers.JsonRpcProvider(42)\n        //const signer = new ethers.Wallet(\"0x5E20Aee97eDa500FbdFD1F3F863318d2bfA51ef3\")\n        const contractAddress = contractsMap[42][\"LuckySix\"][0]\n        const contract = new ethers.Contract(contractAddress, abi, signer)\n        try{\n            return await contract.getDrawnNumbers()\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n\n    async function _endLottery(){\n        const signer = library.getSigner()\n        const contractAddress = contractsMap[42][\"LuckySix\"][0]\n        const contract = new ethers.Contract(contractAddress, abi, signer)\n\n        try{\n            await contract.endLottery()\n            console.log(\"Calculating Winner...\")\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n\n    async function _payout(){\n        const signer = library.getSigner()\n        const contractAddress = contractsMap[42][\"LuckySix\"][0]\n        const contract = new ethers.Contract(contractAddress, abi, signer)\n\n        try{\n            await contract.payout()\n            console.log(\"PAYOUT\")\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n\n    return {_getState, _getBalance, _startLottery, _endLottery, _payout, _getDrawnNumbers}\n}\n\nexport default OnlyOwner"]},"metadata":{},"sourceType":"module"}