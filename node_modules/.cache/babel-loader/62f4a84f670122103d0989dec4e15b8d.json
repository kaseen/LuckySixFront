{"ast":null,"code":"import { createContext, useContext } from 'react';\nimport { DEFAULT_CONFIG } from '../../model/config/default';\nimport { getChainById } from '../../helpers/chain';\nexport const ConfigContext = createContext({\n  config: DEFAULT_CONFIG,\n  updateConfig: () => undefined\n});\n\nconst validConfigs = configs => {\n  if (!(configs === null || configs === void 0 ? void 0 : configs.networks) || (configs === null || configs === void 0 ? void 0 : configs.networks.length) === 0) {\n    console.warn('No networks or supportedChain configured');\n  }\n\n  return configs;\n};\n\nexport function useConfig() {\n  var _a;\n\n  const {\n    config\n  } = useContext(ConfigContext); // backward compatible with supportedChains\n\n  if (config.supportedChains) {\n    console.warn('supportedChain is deprecated, please pass networks instead');\n    const networks = (_a = config.supportedChains) === null || _a === void 0 ? void 0 : _a.map(chainId => getChainById(chainId));\n    return validConfigs(Object.assign(Object.assign({}, config), {\n      networks\n    }));\n  }\n\n  return validConfigs(config);\n}\nexport function useUpdateConfig() {\n  const {\n    updateConfig\n  } = useContext(ConfigContext);\n  return updateConfig;\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AAEA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,OAAO,MAAMC,aAAa,GAAGJ,aAAa,CAAiE;AACzGK,QAAM,EAAEH,cADiG;AAEzGI,cAAY,EAAE,MAAMC;AAFqF,CAAjE,CAAnC;;AAKP,MAAMC,YAAY,GAAIC,OAAD,IAA4D;AAC/E,MAAI,EAACA,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEC,QAAV,KAAsB,QAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEA,QAAT,CAAkBC,MAAlB,MAA6B,CAAvD,EAA0D;AACxDC,WAAO,CAACC,IAAR,CAAa,0CAAb;AACD;;AACD,SAAOJ,OAAP;AACD,CALD;;AAOA,OAAM,SAAUK,SAAV,GAAmB;;;AACvB,QAAM;AAAET;AAAF,MAAaJ,UAAU,CAACG,aAAD,CAA7B,CADuB,CAGvB;;AACA,MAAIC,MAAM,CAACU,eAAX,EAA4B;AAC1BH,WAAO,CAACC,IAAR,CAAa,4DAAb;AACA,UAAMH,QAAQ,GAAY,YAAM,CAACK,eAAP,MAAsB,IAAtB,IAAsBC,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEC,GAAF,CAAOC,OAAD,IAAaf,YAAY,CAACe,OAAD,CAA/B,CAAhD;AACA,WAAOV,YAAY,iCACdH,MADc,GACR;AACTK;AADS,KADQ,EAAnB;AAID;;AAED,SAAOF,YAAY,CAACH,MAAD,CAAnB;AACD;AAED,OAAM,SAAUc,eAAV,GAAyB;AAC7B,QAAM;AAAEb;AAAF,MAAmBL,UAAU,CAACG,aAAD,CAAnC;AACA,SAAOE,YAAP;AACD","names":["createContext","useContext","DEFAULT_CONFIG","getChainById","ConfigContext","config","updateConfig","undefined","validConfigs","configs","networks","length","console","warn","useConfig","supportedChains","_a","map","chainId","useUpdateConfig"],"sources":["/home/vukasin/Desktop/LuckySixFront/node_modules/@usedapp/core/src/providers/config/context.ts"],"sourcesContent":["import { createContext, useContext } from 'react'\nimport { FullConfig, Config, Chain } from '../../constants'\nimport { DEFAULT_CONFIG } from '../../model/config/default'\nimport { getChainById } from '../../helpers/chain'\n\nexport const ConfigContext = createContext<{ config: FullConfig; updateConfig: (config: Config) => void }>({\n  config: DEFAULT_CONFIG,\n  updateConfig: () => undefined,\n})\n\nconst validConfigs = (configs: FullConfig): FullConfig | Record<string, never> => {\n  if (!configs?.networks || configs?.networks.length === 0) {\n    console.warn('No networks or supportedChain configured')\n  }\n  return configs\n}\n\nexport function useConfig() {\n  const { config } = useContext(ConfigContext)\n\n  // backward compatible with supportedChains\n  if (config.supportedChains) {\n    console.warn('supportedChain is deprecated, please pass networks instead')\n    const networks: Chain[] = config.supportedChains?.map((chainId) => getChainById(chainId)) as Chain[]\n    return validConfigs({\n      ...config,\n      networks,\n    })\n  }\n\n  return validConfigs(config)\n}\n\nexport function useUpdateConfig() {\n  const { updateConfig } = useContext(ConfigContext)\n  return updateConfig\n}\n"]},"metadata":{},"sourceType":"module"}