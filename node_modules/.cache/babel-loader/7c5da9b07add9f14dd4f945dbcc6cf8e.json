{"ast":null,"code":"export const BSC = {\n  chainId: 56,\n  chainName: 'BSC',\n  isTestChain: false,\n  isLocalChain: false,\n  multicallAddress: '0x41263cba59eb80dc200f3e2544eda4ed6a90e76c',\n  getExplorerAddressLink: address => `https://bscscan.com/address/${address}`,\n  getExplorerTransactionLink: transactionHash => `https://bscscan.com/tx/${transactionHash}`\n};\nexport const BSCTestnet = {\n  chainId: 97,\n  chainName: 'BSCTestnet',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0xae11C5B5f29A6a25e955F0CB8ddCc416f522AF5C',\n  getExplorerAddressLink: address => `https://testnet.bscscan.com/address/${address}`,\n  getExplorerTransactionLink: transactionHash => `https://testnet.bscscan.com/tx/${transactionHash}`\n};\nexport default {\n  BSC,\n  BSCTestnet\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,GAAG,GAAU;AACxBC,SAAO,EAAE,EADe;AAExBC,WAAS,EAAE,KAFa;AAGxBC,aAAW,EAAE,KAHW;AAIxBC,cAAY,EAAE,KAJU;AAKxBC,kBAAgB,EAAE,4CALM;AAMxBC,wBAAsB,EAAGC,OAAD,IAAqB,+BAA+BA,OAAO,EAN3D;AAOxBC,4BAA0B,EAAGC,eAAD,IAA6B,0BAA0BA,eAAe;AAP1E,CAAnB;AAUP,OAAO,MAAMC,UAAU,GAAU;AAC/BT,SAAO,EAAE,EADsB;AAE/BC,WAAS,EAAE,YAFoB;AAG/BC,aAAW,EAAE,IAHkB;AAI/BC,cAAY,EAAE,KAJiB;AAK/BC,kBAAgB,EAAE,4CALa;AAM/BC,wBAAsB,EAAGC,OAAD,IAAqB,uCAAuCA,OAAO,EAN5D;AAO/BC,4BAA0B,EAAGC,eAAD,IAA6B,kCAAkCA,eAAe;AAP3E,CAA1B;AAUP,eAAe;AACbT,KADa;AAEbU;AAFa,CAAf","names":["BSC","chainId","chainName","isTestChain","isLocalChain","multicallAddress","getExplorerAddressLink","address","getExplorerTransactionLink","transactionHash","BSCTestnet"],"sources":["/home/vukasin/Desktop/LuckySixFront/node_modules/@usedapp/core/src/model/chain/bsc.ts"],"sourcesContent":["import { Chain } from '../../constants'\n\nexport const BSC: Chain = {\n  chainId: 56,\n  chainName: 'BSC',\n  isTestChain: false,\n  isLocalChain: false,\n  multicallAddress: '0x41263cba59eb80dc200f3e2544eda4ed6a90e76c',\n  getExplorerAddressLink: (address: string) => `https://bscscan.com/address/${address}`,\n  getExplorerTransactionLink: (transactionHash: string) => `https://bscscan.com/tx/${transactionHash}`,\n}\n\nexport const BSCTestnet: Chain = {\n  chainId: 97,\n  chainName: 'BSCTestnet',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0xae11C5B5f29A6a25e955F0CB8ddCc416f522AF5C',\n  getExplorerAddressLink: (address: string) => `https://testnet.bscscan.com/address/${address}`,\n  getExplorerTransactionLink: (transactionHash: string) => `https://testnet.bscscan.com/tx/${transactionHash}`,\n}\n\nexport default {\n  BSC,\n  BSCTestnet,\n}\n"]},"metadata":{},"sourceType":"module"}