{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { BlockNumberContext } from './context';\nimport { blockNumberReducer } from './reducer';\nimport { useEthers, useDebounce } from '../../hooks';\nexport function BlockNumberProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const {\n    library,\n    chainId\n  } = useEthers();\n  const [state, dispatch] = useReducer(blockNumberReducer, {});\n  useEffect(() => {\n    if (library && chainId !== undefined) {\n      const update = blockNumber => dispatch({\n        chainId,\n        blockNumber\n      });\n\n      library.on('block', update);\n      return () => {\n        library.off('block', update);\n      };\n    }\n  }, [library, chainId]);\n  const debouncedState = useDebounce(state, 100);\n  const blockNumber = chainId !== undefined ? debouncedState[chainId] : undefined;\n  return _jsx(BlockNumberContext.Provider, {\n    value: blockNumber,\n    children: children\n  }, void 0);\n}","map":{"version":3,"mappings":";AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAiD,OAAjD;AACA,SAASC,kBAAT,QAAmC,WAAnC;AACA,SAASC,kBAAT,QAAmC,WAAnC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,aAAvC;AAMA,OAAM,SAAUC,mBAAV,OAAiD;AAAA,MAAnB;AAAEC;AAAF,GAAmB;AACrD,QAAM;AAAEC,WAAF;AAAWC;AAAX,MAAuBL,SAAS,EAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACE,kBAAD,EAAqB,EAArB,CAApC;AACAH,WAAS,CAAC,MAAK;AACb,QAAIQ,OAAO,IAAIC,OAAO,KAAKG,SAA3B,EAAsC;AACpC,YAAMC,MAAM,GAAIC,WAAD,IAAyBH,QAAQ,CAAC;AAAEF,eAAF;AAAWK;AAAX,OAAD,CAAhD;;AACAN,aAAO,CAACO,EAAR,CAAW,OAAX,EAAoBF,MAApB;AACA,aAAO,MAAK;AACVL,eAAO,CAACQ,GAAR,CAAY,OAAZ,EAAqBH,MAArB;AACD,OAFD;AAGD;AACF,GARQ,EAQN,CAACL,OAAD,EAAUC,OAAV,CARM,CAAT;AAUA,QAAMQ,cAAc,GAAGZ,WAAW,CAACK,KAAD,EAAQ,GAAR,CAAlC;AACA,QAAMI,WAAW,GAAGL,OAAO,KAAKG,SAAZ,GAAwBK,cAAc,CAACR,OAAD,CAAtC,GAAkDG,SAAtE;AAEA,SAAOM,KAAChB,kBAAkB,CAACiB,QAApB,EAA4B;AAACC,SAAK,EAAEN,WAAR;AAAqBP,YAAQ,EAAEA;AAA/B,GAA5B,EAAmE,MAAnE,CAAP;AACD","names":["useEffect","useReducer","BlockNumberContext","blockNumberReducer","useEthers","useDebounce","BlockNumberProvider","children","library","chainId","state","dispatch","undefined","update","blockNumber","on","off","debouncedState","_jsx","Provider","value"],"sources":["/home/vukasin/Desktop/LuckySixFront/node_modules/@usedapp/core/src/providers/blockNumber/provider.tsx"],"sourcesContent":["import { useEffect, useReducer, ReactNode } from 'react'\nimport { BlockNumberContext } from './context'\nimport { blockNumberReducer } from './reducer'\nimport { useEthers, useDebounce } from '../../hooks'\n\ninterface Props {\n  children: ReactNode\n}\n\nexport function BlockNumberProvider({ children }: Props) {\n  const { library, chainId } = useEthers()\n  const [state, dispatch] = useReducer(blockNumberReducer, {})\n  useEffect(() => {\n    if (library && chainId !== undefined) {\n      const update = (blockNumber: number) => dispatch({ chainId, blockNumber })\n      library.on('block', update)\n      return () => {\n        library.off('block', update)\n      }\n    }\n  }, [library, chainId])\n\n  const debouncedState = useDebounce(state, 100)\n  const blockNumber = chainId !== undefined ? debouncedState[chainId] : undefined\n\n  return <BlockNumberContext.Provider value={blockNumber} children={children} />\n}\n"]},"metadata":{},"sourceType":"module"}