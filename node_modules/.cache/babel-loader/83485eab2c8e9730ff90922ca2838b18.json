{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useWeb3React } from \"@web3-react/core\";\nimport { ethers } from \"ethers\";\nimport LuckySix from \"../dependencies/LuckySix.json\";\nimport contractsMap from \"../contractsMap.json\";\nexport const OnlyOwner = () => {\n  _s();\n\n  const {\n    library\n  } = useWeb3React();\n  const {\n    abi\n  } = LuckySix;\n\n  async function _getBalance() {\n    const signer = library.getSigner();\n    const contractAddress = contractsMap[42][\"LuckySix\"][0];\n    const contract = new ethers.Contract(contractAddress, abi, signer);\n\n    try {\n      console.log(\"ETH balance: \" + (await contract.getETHBalance()) / 10 ** 18);\n      console.log(\"LINK balance: \" + (await contract.getLINKBalance()) / 10 ** 18);\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function _startLottery() {\n    const signer = library.getSigner();\n    const contractAddress = contractsMap[42][\"LuckySix\"][0];\n    const contract = new ethers.Contract(contractAddress, abi, signer);\n\n    try {\n      await contract.startLottery();\n      console.log(\"Lottery Started\");\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function _endLottery() {\n    const signer = library.getSigner();\n    const contractAddress = contractsMap[42][\"LuckySix\"][0];\n    const contract = new ethers.Contract(contractAddress, abi, signer);\n\n    try {\n      await contract.endLottery();\n      console.log(\"Calculating Winner...\");\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function _payout() {\n    const signer = library.getSigner();\n    const contractAddress = contractsMap[42][\"LuckySix\"][0];\n    const contract = new ethers.Contract(contractAddress, abi, signer);\n\n    try {\n      await contract.payout();\n      console.log(\"PAYOUT\");\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  return {\n    _getBalance,\n    _startLottery,\n    _endLottery,\n    _payout\n  };\n};\n\n_s(OnlyOwner, \"x7m7a80swTujuMnrOOSksccFILo=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = OnlyOwner;\nexport default OnlyOwner;\n\nvar _c;\n\n$RefreshReg$(_c, \"OnlyOwner\");","map":{"version":3,"sources":["/home/vukasin/Desktop/LuckySixFront/src/hooks/hookOnlyOwner.tsx"],"names":["useWeb3React","ethers","LuckySix","contractsMap","OnlyOwner","library","abi","_getBalance","signer","getSigner","contractAddress","contract","Contract","console","log","getETHBalance","getLINKBalance","ex","_startLottery","startLottery","_endLottery","endLottery","_payout","payout"],"mappings":"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","sourcesContent":["import {useWeb3React} from \"@web3-react/core\"\nimport {ethers} from \"ethers\"\nimport LuckySix from \"../dependencies/LuckySix.json\"\nimport contractsMap from \"../contractsMap.json\"\n\n\nexport const OnlyOwner = () => {\n\n    const {library} = useWeb3React()\n\n    const {abi} = LuckySix\n   \n    async function _getBalance(){\n        const signer = library.getSigner()\n        const contractAddress = contractsMap[42][\"LuckySix\"][0]\n        const contract = new ethers.Contract(contractAddress, abi, signer)\n\n        try{\n            console.log(\"ETH balance: \" + await contract.getETHBalance() / 10 ** 18)\n            console.log(\"LINK balance: \" + await contract.getLINKBalance() / 10 ** 18)\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n    \n    async function _startLottery(){\n        const signer = library.getSigner()\n        const contractAddress = contractsMap[42][\"LuckySix\"][0]\n        const contract = new ethers.Contract(contractAddress, abi, signer)\n\n        try{\n            await contract.startLottery()\n            console.log(\"Lottery Started\")\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n\n    async function _endLottery(){\n        const signer = library.getSigner()\n        const contractAddress = contractsMap[42][\"LuckySix\"][0]\n        const contract = new ethers.Contract(contractAddress, abi, signer)\n\n        try{\n            await contract.endLottery()\n            console.log(\"Calculating Winner...\")\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n\n    async function _payout(){\n        const signer = library.getSigner()\n        const contractAddress = contractsMap[42][\"LuckySix\"][0]\n        const contract = new ethers.Contract(contractAddress, abi, signer)\n\n        try{\n            await contract.payout()\n            console.log(\"PAYOUT\")\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n\n    return {_getBalance, _startLottery, _endLottery, _payout}\n}\n\nexport default OnlyOwner"]},"metadata":{},"sourceType":"module"}