{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useWeb3React } from \"@web3-react/core\";\nimport LuckySix from \"../dependencies/LuckySix.json\";\nexport const OnlyOwner = () => {\n  _s();\n\n  const {\n    account,\n    library\n  } = useWeb3React();\n  const {\n    abi\n  } = LuckySix;\n  /*const signer = library.getSigner()\n  const contractAddress = contractsMap[42][\"LuckySix\"][0]\n  const contract = new ethers.Contract(contractAddress, abi, signer)*/\n\n  /*async function _enterLottery(){\n      const signer = library.getSigner()\n      // TODO: HARDKODOVAN 42 I POSLEDNJI 0\n      const contractAddress = contractsMap[42][\"LuckySix\"][0]\n      const options = {value: ethers.utils.parseEther(\"0.0000069\")}\n      const contract = new ethers.Contract(contractAddress, abi, signer)\n       try{\n          console.log(await contract.enterLottery([1,2,3,4,5,6], options))\n      }catch(ex){\n          console.log(ex)\n      }\n  }\n   return {_enterLottery}*/\n\n  async function getBalance() {\n    console.log(\"USO\");\n    /*const signer = library.getSigner()\n    const contractAddress = contractsMap[42][\"LuckySix\"][0]\n    const contract = new ethers.Contract(contractAddress, abi, signer)\n     try{\n        //console.log(\"ETH balance\" + await contract.getETHBalance())\n        \n        console.log(\"ETH balance\")\n        console.log(await contract.getETHBalance())\n        //console.log(\"LINK balance\" + await contract.getLINKBalance())\n    }catch(ex){\n        console.log(ex)\n    }*/\n  }\n\n  return {\n    getBalance\n  };\n};\n\n_s(OnlyOwner, \"xaHdvOy2NynB4JuHyye5AaIXVbE=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = OnlyOwner;\nexport default OnlyOwner;\n\nvar _c;\n\n$RefreshReg$(_c, \"OnlyOwner\");","map":{"version":3,"sources":["/home/vukasin/Desktop/LuckySixFront/src/hooks/hookAdmin.tsx"],"names":["useWeb3React","LuckySix","OnlyOwner","account","library","abi","getBalance","console","log"],"mappings":";;AAAA,SAAQA,YAAR,QAA2B,kBAA3B;AAEA,OAAOC,QAAP,MAAqB,+BAArB;AAIA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAE3B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBJ,YAAY,EAAvC;AAEA,QAAM;AAACK,IAAAA;AAAD,MAAQJ,QAAd;AAEA;AACJ;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAII,iBAAeK,UAAf,GAA2B;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEK;;AAED,SAAO;AAACF,IAAAA;AAAD,GAAP;AACH,CA5CM;;GAAMJ,S;UAEkBF,Y;;;KAFlBE,S;AA8Cb,eAAeA,SAAf","sourcesContent":["import {useWeb3React} from \"@web3-react/core\"\nimport {ethers} from \"ethers\"\nimport LuckySix from \"../dependencies/LuckySix.json\"\nimport contractsMap from \"../contractsMap.json\"\n\n\nexport const OnlyOwner = () => {\n\n    const {account, library} = useWeb3React()\n\n    const {abi} = LuckySix\n\n    /*const signer = library.getSigner()\n    const contractAddress = contractsMap[42][\"LuckySix\"][0]\n    const contract = new ethers.Contract(contractAddress, abi, signer)*/\n\n    /*async function _enterLottery(){\n        const signer = library.getSigner()\n        // TODO: HARDKODOVAN 42 I POSLEDNJI 0\n        const contractAddress = contractsMap[42][\"LuckySix\"][0]\n        const options = {value: ethers.utils.parseEther(\"0.0000069\")}\n        const contract = new ethers.Contract(contractAddress, abi, signer)\n\n        try{\n            console.log(await contract.enterLottery([1,2,3,4,5,6], options))\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n\n    return {_enterLottery}*/\n\n    async function getBalance(){\n        console.log(\"USO\")\n        /*const signer = library.getSigner()\n        const contractAddress = contractsMap[42][\"LuckySix\"][0]\n        const contract = new ethers.Contract(contractAddress, abi, signer)\n\n        try{\n            //console.log(\"ETH balance\" + await contract.getETHBalance())\n            \n            console.log(\"ETH balance\")\n            console.log(await contract.getETHBalance())\n            //console.log(\"LINK balance\" + await contract.getLINKBalance())\n        }catch(ex){\n            console.log(ex)\n        }*/\n    }\n\n    return {getBalance}\n}\n\nexport default OnlyOwner"]},"metadata":{},"sourceType":"module"}