{"ast":null,"code":"var _jsxFileName = \"/home/vukasin/Desktop/LuckySixFront/src/components/Main.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, makeStyles, TextField } from \"@material-ui/core\";\nimport { EnterLottery } from \"../hooks/hookMain\";\nimport { OnlyOwner } from \"../hooks/hookOnlyOwner\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  wrapper: {\n    height: '580px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  timer: {\n    height: '50px',\n    backgroundColor: 'yellow'\n  },\n  box: {\n    paddingTop: '55px',\n    width: '500px',\n    height: '200px',\n    backgroundColor: '#F8F8F8',\n    border: '1.5px solid black'\n  },\n  rowFlex: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    padding: '7px'\n  },\n  inputNumbers: {\n    width: 60,\n    height: 56,\n    marginLeft: '5px',\n    marginRight: '5px',\n    backgroundColor: '#FFFFFF',\n    border: '1px solid black',\n    borderRadius: '10px',\n    fontWeight: 1000\n  },\n  button: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: '5px'\n  }\n}));\nexport const Main = () => {\n  _s();\n\n  const classes = useStyles();\n  const hookEnterLottery = EnterLottery();\n  const hookOnlyOwner = OnlyOwner();\n  let combination = [-1, -1, -1, -1, -1, -1];\n  let value;\n  const [drawnNumbers, setDrawnNumbers] = useState([]);\n\n  const enterLottery = () => {\n    hookEnterLottery._enterLottery(combination, value);\n  };\n\n  const xx = 5;\n  const blabla = \"ASFAS\";\n\n  async function fja() {\n    const x = await hookOnlyOwner._getDrawnNumbers();\n    var numbers = new Array();\n\n    for (let index = 0; index < 35; index++) {\n      numbers.push(x[index].toNumber());\n    }\n\n    setDrawnNumbers(numbers);\n  }\n\n  useEffect(() => {\n    fja();\n    console.log(\"uso\");\n    console.log(drawnNumbers);\n  }, [drawnNumbers]); //TODO: TIMER JEL STARTOVAN ILI SE RACUNA WINNER\n  //TODO: PLAY NE MOZE DA SE KLIKNE AKO NIJE VALIDAN INPUT U POLJA SA BROJEVIMA\n  //TODO: VALIDAN INPUT BROJ IZMEDJU 1-48 I SVI RAZLICITI\n  //TODO: POLJE ZACRVENI AKO NIJE VALIDAN INPUT\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.box,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        className: classes.rowFlex,\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          children: Array.from({\n            length: 6\n          }, (_, i) => /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.inputNumbers,\n            onChange: v => combination[i] = Number(v.target.value),\n            inputProps: {\n              min: 0,\n              style: {\n                textAlign: 'center'\n              }\n            },\n            variant: \"outlined\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.rowFlex,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          inputProps: {\n            min: 0,\n            style: {\n              textAlign: 'center'\n            }\n          },\n          onChange: v => value = v.target.value,\n          children: \"BLA BLA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.rowFlex,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"large\",\n          onClick: enterLottery,\n          className: classes.button,\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: fja,\n        children: \"LGALG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), \"AS\", blabla]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"ZWNQHLzbapDOQwbFwlXTU3HT2zw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/vukasin/Desktop/LuckySixFront/src/components/Main.tsx"],"names":["Box","Button","makeStyles","TextField","EnterLottery","OnlyOwner","useEffect","useState","useStyles","wrapper","height","display","flexDirection","justifyContent","alignItems","timer","backgroundColor","box","paddingTop","width","border","rowFlex","padding","inputNumbers","marginLeft","marginRight","borderRadius","fontWeight","button","Main","classes","hookEnterLottery","hookOnlyOwner","combination","value","drawnNumbers","setDrawnNumbers","enterLottery","_enterLottery","xx","blabla","fja","x","_getDrawnNumbers","numbers","Array","index","push","toNumber","console","log","from","length","_","i","v","Number","target","min","style","textAlign"],"mappings":"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","sourcesContent":["import {Box, Button, makeStyles, TextField} from \"@material-ui/core\"\nimport {EnterLottery} from \"../hooks/hookMain\"\nimport {OnlyOwner} from \"../hooks/hookOnlyOwner\"\nimport {useEffect, useState} from \"react\"\n\nconst useStyles = makeStyles(() => ({\n    wrapper: {\n        height: '580px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    timer: {\n        height: '50px',\n        backgroundColor: 'yellow'\n    },\n    box: {\n        paddingTop: '55px',\n        width: '500px',\n        height: '200px',\n        backgroundColor: '#F8F8F8',\n        border: '1.5px solid black'      \n    },\n    rowFlex:{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        padding: '7px',\n    },\n    inputNumbers: {\n        width: 60,\n        height: 56,\n        marginLeft: '5px',\n        marginRight: '5px',\n        backgroundColor: '#FFFFFF',\n        border: '1px solid black',  \n        borderRadius: '10px',\n        fontWeight: 1000\n    },\n    button: {\n        backgroundColor: '#FFFFFF',\n        borderRadius: '5px'\n    },    \n}))\n\n\nexport const Main = () => {\n\n    const classes = useStyles()\n\n    const hookEnterLottery = EnterLottery()\n    const hookOnlyOwner = OnlyOwner()\n\n    let combination : Array<Number> = [-1,-1,-1,-1,-1,-1]\n\n    let value;\n\n    const [drawnNumbers, setDrawnNumbers] = useState<Array<Number>>([])\n\n    const enterLottery = () => {\n        hookEnterLottery._enterLottery(combination, value)\n    }\n\n    const xx = 5\n    const blabla = \"ASFAS\"\n\n    async function fja(){\n        const x = await hookOnlyOwner._getDrawnNumbers()\n        var numbers = new Array()\n        for (let index = 0; index < 35; index++) {\n            numbers.push(x[index].toNumber())\n        }\n\n        setDrawnNumbers(numbers)\n    }\n\n    useEffect(() => {\n        fja()\n        console.log(\"uso\")\n        console.log(drawnNumbers)\n      }, [drawnNumbers]);\n\n    //TODO: TIMER JEL STARTOVAN ILI SE RACUNA WINNER\n    //TODO: PLAY NE MOZE DA SE KLIKNE AKO NIJE VALIDAN INPUT U POLJA SA BROJEVIMA\n    //TODO: VALIDAN INPUT BROJ IZMEDJU 1-48 I SVI RAZLICITI\n    //TODO: POLJE ZACRVENI AKO NIJE VALIDAN INPUT\n    return(\n        <div className={classes.wrapper}>\n            <Box className={classes.box}>\n                <Box component=\"form\" className={classes.rowFlex}>\n                <section>\n                    {Array.from({ length: 6 }, \n                    (_, i) => \n                    <TextField\n                        key={i}\n                        className={classes.inputNumbers} \n                        onChange={(v) => combination[i] = Number(v.target.value)}\n                        inputProps={{min: 0, style: { textAlign:'center'}}}\n                        variant=\"outlined\"\n                    />\n                    )}\n                </section>\n                </Box>\n                <Box className={classes.rowFlex}>\n                    <TextField inputProps={{min: 0, style: { textAlign: 'center' }}} onChange={(v) => value = v.target.value}>\n                        BLA BLA\n                    </TextField>\n                </Box>\n                <Box className={classes.rowFlex}>\n                    <Button variant=\"outlined\" size=\"large\" onClick={enterLottery} className={classes.button}>\n                        Play\n                    </Button>\n                </Box>\n            </Box>\n            <h1>\n                <Button onClick={fja}>LGALG</Button>\n                AS\n                {\n                    blabla\n                }\n            </h1>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}