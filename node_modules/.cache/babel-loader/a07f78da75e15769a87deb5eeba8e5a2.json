{"ast":null,"code":"export function subscribeToProviderEvents(provider, onUpdate, onDisconnect) {\n  if (provider === null || provider === void 0 ? void 0 : provider.on) {\n    const onConnectListener = info => {\n      if (info === null || info === void 0 ? void 0 : info.chainId) {\n        onUpdate({\n          chainId: Number(info.chainId)\n        });\n      }\n    };\n\n    provider.on('connect', onConnectListener);\n\n    const onDisconnectListener = error => {\n      onDisconnect(new Error(error));\n    };\n\n    provider.on('disconnect', onDisconnectListener);\n\n    const onChainChangedListener = chainId => {\n      onUpdate({\n        chainId: Number(chainId)\n      });\n    };\n\n    provider.on('chainChanged', onChainChangedListener);\n\n    const onAccountsChangedListener = accounts => {\n      onUpdate({\n        accounts\n      });\n    };\n\n    provider.on('accountsChanged', onAccountsChangedListener);\n    return () => {\n      provider.removeListener('connect', onConnectListener);\n      provider.removeListener('disconnect', onDisconnectListener);\n      provider.removeListener('chainChanged', onChainChangedListener);\n      provider.removeListener('accountsChanged', onAccountsChangedListener);\n    };\n  }\n\n  return () => undefined;\n}","map":{"version":3,"mappings":"AAGA,OAAM,SAAUA,yBAAV,CACJC,QADI,EAEJC,QAFI,EAGJC,YAHI,EAGgC;AAEpC,MAAIF,QAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEG,EAAd,EAAkB;AAChB,UAAMC,iBAAiB,GAAIC,IAAD,IAAgD;AACxE,UAAIA,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEC,OAAV,EAAmB;AACjBL,gBAAQ,CAAC;AAAEK,iBAAO,EAAEC,MAAM,CAACF,IAAI,CAACC,OAAN;AAAjB,SAAD,CAAR;AACD;AACF,KAJD;;AAKAN,YAAQ,CAACG,EAAT,CAAY,SAAZ,EAAuBC,iBAAvB;;AAEA,UAAMI,oBAAoB,GAAIC,KAAD,IAAqB;AAChDP,kBAAY,CAAC,IAAIQ,KAAJ,CAAUD,KAAV,CAAD,CAAZ;AACD,KAFD;;AAGAT,YAAQ,CAACG,EAAT,CAAY,YAAZ,EAA0BK,oBAA1B;;AAEA,UAAMG,sBAAsB,GAAIL,OAAD,IAA0B;AACvDL,cAAQ,CAAC;AAAEK,eAAO,EAAEC,MAAM,CAACD,OAAD;AAAjB,OAAD,CAAR;AACD,KAFD;;AAGAN,YAAQ,CAACG,EAAT,CAAY,cAAZ,EAA4BQ,sBAA5B;;AAEA,UAAMC,yBAAyB,GAAIC,QAAD,IAA6B;AAC7DZ,cAAQ,CAAC;AAAEY;AAAF,OAAD,CAAR;AACD,KAFD;;AAGAb,YAAQ,CAACG,EAAT,CAAY,iBAAZ,EAA+BS,yBAA/B;AAEA,WAAO,MAAK;AACVZ,cAAQ,CAACc,cAAT,CAAwB,SAAxB,EAAmCV,iBAAnC;AACAJ,cAAQ,CAACc,cAAT,CAAwB,YAAxB,EAAsCN,oBAAtC;AACAR,cAAQ,CAACc,cAAT,CAAwB,cAAxB,EAAwCH,sBAAxC;AACAX,cAAQ,CAACc,cAAT,CAAwB,iBAAxB,EAA2CF,yBAA3C;AACD,KALD;AAMD;;AAED,SAAO,MAAMG,SAAb;AACD","names":["subscribeToProviderEvents","provider","onUpdate","onDisconnect","on","onConnectListener","info","chainId","Number","onDisconnectListener","error","Error","onChainChangedListener","onAccountsChangedListener","accounts","removeListener","undefined"],"sources":["/home/vukasin/Desktop/LuckySixFront/node_modules/@usedapp/core/src/helpers/eip1193.ts"],"sourcesContent":["import { EventEmitter } from 'events'\nimport { Network } from '../providers'\n\nexport function subscribeToProviderEvents(\n  provider: EventEmitter | undefined,\n  onUpdate: (updatedNetwork: Partial<Network>) => void,\n  onDisconnect: (error: Error) => void\n) {\n  if (provider?.on) {\n    const onConnectListener = (info: { chainId: string } | undefined): void => {\n      if (info?.chainId) {\n        onUpdate({ chainId: Number(info.chainId) })\n      }\n    }\n    provider.on('connect', onConnectListener)\n\n    const onDisconnectListener = (error: any): void => {\n      onDisconnect(new Error(error))\n    }\n    provider.on('disconnect', onDisconnectListener)\n\n    const onChainChangedListener = (chainId: string): void => {\n      onUpdate({ chainId: Number(chainId) })\n    }\n    provider.on('chainChanged', onChainChangedListener)\n\n    const onAccountsChangedListener = (accounts: string[]): void => {\n      onUpdate({ accounts })\n    }\n    provider.on('accountsChanged', onAccountsChangedListener)\n\n    return () => {\n      provider.removeListener('connect', onConnectListener)\n      provider.removeListener('disconnect', onDisconnectListener)\n      provider.removeListener('chainChanged', onChainChangedListener)\n      provider.removeListener('accountsChanged', onAccountsChangedListener)\n    }\n  }\n\n  return () => undefined\n}\n"]},"metadata":{},"sourceType":"module"}