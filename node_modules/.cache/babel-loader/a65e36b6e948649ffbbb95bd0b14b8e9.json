{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useWeb3React } from \"@web3-react/core\";\nimport { ethers } from \"ethers\";\nimport LuckySix from \"../dependencies/LuckySix.json\";\nimport contractsMap from \"../contractsMap.json\";\nexport const OnlyOwner = () => {\n  _s();\n\n  const {\n    account,\n    library\n  } = useWeb3React();\n  const {\n    abi\n  } = LuckySix;\n  /*const signer = library.getSigner()\n  const contractAddress = contractsMap[42][\"LuckySix\"][0]\n  const contract = new ethers.Contract(contractAddress, abi, signer)*/\n\n  /*async function _enterLottery(){\n      const signer = library.getSigner()\n      // TODO: HARDKODOVAN 42 I POSLEDNJI 0\n      const contractAddress = contractsMap[42][\"LuckySix\"][0]\n      const options = {value: ethers.utils.parseEther(\"0.0000069\")}\n      const contract = new ethers.Contract(contractAddress, abi, signer)\n       try{\n          console.log(await contract.enterLottery([1,2,3,4,5,6], options))\n      }catch(ex){\n          console.log(ex)\n      }\n  }\n   return {_enterLottery}*/\n\n  async function getBalance() {\n    const signer = library.getSigner();\n    const contractAddress = contractsMap[42][\"LuckySix\"][0];\n    const contract = new ethers.Contract(contractAddress, abi, signer);\n\n    try {\n      console.log(\"ETH balance: \" + (await contract.getETHBalance()) / 10 ** 18);\n      console.log(\"LINK balance: \" + (await contract.getLINKBalance()) / 10 ** 18);\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  return {\n    getBalance\n  };\n};\n\n_s(OnlyOwner, \"xaHdvOy2NynB4JuHyye5AaIXVbE=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = OnlyOwner;\nexport default OnlyOwner;\n\nvar _c;\n\n$RefreshReg$(_c, \"OnlyOwner\");","map":{"version":3,"sources":["/home/vukasin/Desktop/LuckySixFront/src/hooks/hookAdmin.tsx"],"names":["useWeb3React","ethers","LuckySix","contractsMap","OnlyOwner","account","library","abi","getBalance","signer","getSigner","contractAddress","contract","Contract","console","log","getETHBalance","getLINKBalance","ex"],"mappings":";;AAAA,SAAQA,YAAR,QAA2B,kBAA3B;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAE3B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBN,YAAY,EAAvC;AAEA,QAAM;AAACO,IAAAA;AAAD,MAAQL,QAAd;AAEA;AACJ;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAII,iBAAeM,UAAf,GAA2B;AACvB,UAAMC,MAAM,GAAGH,OAAO,CAACI,SAAR,EAAf;AACA,UAAMC,eAAe,GAAGR,YAAY,CAAC,EAAD,CAAZ,CAAiB,UAAjB,EAA6B,CAA7B,CAAxB;AACA,UAAMS,QAAQ,GAAG,IAAIX,MAAM,CAACY,QAAX,CAAoBF,eAApB,EAAqCJ,GAArC,EAA0CE,MAA1C,CAAjB;;AAEA,QAAG;AACCK,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB,OAAMH,QAAQ,CAACI,aAAT,EAAN,IAAiC,MAAM,EAArE;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmB,OAAMH,QAAQ,CAACK,cAAT,EAAN,IAAkC,MAAM,EAAvE;AACH,KAHD,CAGC,OAAMC,EAAN,EAAS;AACNJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ;AACH;AACJ;;AAED,SAAO;AAACV,IAAAA;AAAD,GAAP;AACH,CAxCM;;GAAMJ,S;UAEkBJ,Y;;;KAFlBI,S;AA0Cb,eAAeA,SAAf","sourcesContent":["import {useWeb3React} from \"@web3-react/core\"\nimport {ethers} from \"ethers\"\nimport LuckySix from \"../dependencies/LuckySix.json\"\nimport contractsMap from \"../contractsMap.json\"\n\n\nexport const OnlyOwner = () => {\n\n    const {account, library} = useWeb3React()\n\n    const {abi} = LuckySix\n\n    /*const signer = library.getSigner()\n    const contractAddress = contractsMap[42][\"LuckySix\"][0]\n    const contract = new ethers.Contract(contractAddress, abi, signer)*/\n\n    /*async function _enterLottery(){\n        const signer = library.getSigner()\n        // TODO: HARDKODOVAN 42 I POSLEDNJI 0\n        const contractAddress = contractsMap[42][\"LuckySix\"][0]\n        const options = {value: ethers.utils.parseEther(\"0.0000069\")}\n        const contract = new ethers.Contract(contractAddress, abi, signer)\n\n        try{\n            console.log(await contract.enterLottery([1,2,3,4,5,6], options))\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n\n    return {_enterLottery}*/\n\n    async function getBalance(){\n        const signer = library.getSigner()\n        const contractAddress = contractsMap[42][\"LuckySix\"][0]\n        const contract = new ethers.Contract(contractAddress, abi, signer)\n\n        try{\n            console.log(\"ETH balance: \" + await contract.getETHBalance() / 10 ** 18)\n            console.log(\"LINK balance: \" + await contract.getLINKBalance() / 10 ** 18)\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n\n    return {getBalance}\n}\n\nexport default OnlyOwner"]},"metadata":{},"sourceType":"module"}