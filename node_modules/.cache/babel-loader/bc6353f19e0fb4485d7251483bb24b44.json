{"ast":null,"code":"import React, { useReducer, useRef, useCallback, useEffect, createContext, useMemo, useContext } from 'react';\nimport invariant from 'tiny-invariant';\nimport { ConnectorEvent } from '@web3-react/types';\nimport warning from 'tiny-warning';\nimport { arrayify } from '@ethersproject/bytes';\nimport { keccak256 } from '@ethersproject/keccak256';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n} // A type of promise-like that resolves synchronously and supports only one observer\n\n\nvar _iteratorSymbol = /*#__PURE__*/typeof Symbol !== \"undefined\" ? Symbol.iterator || (Symbol.iterator = /*#__PURE__*/Symbol(\"Symbol.iterator\")) : \"@@iterator\"; // Asynchronously iterate through an object's values\n\n\nvar _asyncIteratorSymbol = /*#__PURE__*/typeof Symbol !== \"undefined\" ? Symbol.asyncIterator || (Symbol.asyncIterator = /*#__PURE__*/Symbol(\"Symbol.asyncIterator\")) : \"@@asyncIterator\"; // Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\n\n\nfunction _catch(body, recover) {\n  try {\n    var result = body();\n  } catch (e) {\n    return recover(e);\n  }\n\n  if (result && result.then) {\n    return result.then(void 0, recover);\n  }\n\n  return result;\n} // Asynchronously await a promise and pass the result to a finally continuation\n\n\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === 'string') {\n    // Temporary fix until the next version of Metamask Mobile gets released.\n    // In the current version (0.2.13), the chainId starts with “Ox” rather\n    // than “0x”. Fix: https://github.com/MetaMask/metamask-mobile/pull/1275\n    chainId = chainId.replace(/^Ox/, '0x');\n    var parsedChainId = Number.parseInt(chainId, chainId.trim().substring(0, 2) === '0x' ? 16 : 10);\n    !!Number.isNaN(parsedChainId) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"chainId \" + chainId + \" is not an integer\") : invariant(false) : void 0;\n    return parsedChainId;\n  } else {\n    !Number.isInteger(chainId) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"chainId \" + chainId + \" is not an integer\") : invariant(false) : void 0;\n    return chainId;\n  }\n} // https://github.com/ethers-io/ethers.js/blob/d9d438a119bb11f8516fc9cf02c534ab3816fcb3/packages/address/src.ts/index.ts\n\n\nfunction normalizeAccount(_address) {\n  !(typeof _address === 'string' && _address.match(/^(0x)?[0-9a-fA-F]{40}$/)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Invalid address \" + _address) : invariant(false) : void 0;\n  var address = _address.substring(0, 2) === '0x' ? _address : \"0x\" + _address;\n  var chars = address.toLowerCase().substring(2).split('');\n  var charsArray = new Uint8Array(40);\n\n  for (var i = 0; i < 40; i++) {\n    charsArray[i] = chars[i].charCodeAt(0);\n  }\n\n  var hashed = arrayify(keccak256(charsArray));\n\n  for (var _i = 0; _i < 40; _i += 2) {\n    if (hashed[_i >> 1] >> 4 >= 8) {\n      chars[_i] = chars[_i].toUpperCase();\n    }\n\n    if ((hashed[_i >> 1] & 0x0f) >= 8) {\n      chars[_i + 1] = chars[_i + 1].toUpperCase();\n    }\n  }\n\n  var addressChecksum = \"0x\" + chars.join('');\n  !!(address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && address !== addressChecksum) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Bad address checksum \" + address + \" \" + addressChecksum) : invariant(false) : void 0;\n  return addressChecksum;\n}\n\nvar augmentConnectorUpdate = function augmentConnectorUpdate(connector, update) {\n  try {\n    var _temp3 = function _temp3(provider) {\n      return Promise.resolve(Promise.all([update.chainId === undefined ? connector.getChainId() : update.chainId, update.account === undefined ? connector.getAccount() : update.account])).then(function (_ref2) {\n        var _chainId = _ref2[0],\n            _account = _ref2[1];\n        var chainId = normalizeChainId(_chainId);\n\n        if (!!connector.supportedChainIds && !connector.supportedChainIds.includes(chainId)) {\n          throw new UnsupportedChainIdError(chainId, connector.supportedChainIds);\n        }\n\n        var account = _account === null ? _account : normalizeAccount(_account);\n        return {\n          provider: provider,\n          chainId: chainId,\n          account: account\n        };\n      });\n    };\n\n    var _temp4 = update.provider === undefined;\n\n    return Promise.resolve(_temp4 ? Promise.resolve(connector.getProvider()).then(_temp3) : _temp3(update.provider));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nvar StaleConnectorError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(StaleConnectorError, _Error);\n\n  function StaleConnectorError() {\n    var _this;\n\n    _this = _Error.call(this) || this;\n    _this.name = _this.constructor.name;\n    return _this;\n  }\n\n  return StaleConnectorError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar UnsupportedChainIdError = /*#__PURE__*/function (_Error2) {\n  _inheritsLoose(UnsupportedChainIdError, _Error2);\n\n  function UnsupportedChainIdError(unsupportedChainId, supportedChainIds) {\n    var _this2;\n\n    _this2 = _Error2.call(this) || this;\n    _this2.name = _this2.constructor.name;\n    _this2.message = \"Unsupported chain id: \" + unsupportedChainId + \". Supported chain ids are: \" + supportedChainIds + \".\";\n    return _this2;\n  }\n\n  return UnsupportedChainIdError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar ActionType;\n\n(function (ActionType) {\n  ActionType[ActionType[\"ACTIVATE_CONNECTOR\"] = 0] = \"ACTIVATE_CONNECTOR\";\n  ActionType[ActionType[\"UPDATE\"] = 1] = \"UPDATE\";\n  ActionType[ActionType[\"UPDATE_FROM_ERROR\"] = 2] = \"UPDATE_FROM_ERROR\";\n  ActionType[ActionType[\"ERROR\"] = 3] = \"ERROR\";\n  ActionType[ActionType[\"ERROR_FROM_ACTIVATION\"] = 4] = \"ERROR_FROM_ACTIVATION\";\n  ActionType[ActionType[\"DEACTIVATE_CONNECTOR\"] = 5] = \"DEACTIVATE_CONNECTOR\";\n})(ActionType || (ActionType = {}));\n\nfunction reducer(state, _ref) {\n  var type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case ActionType.ACTIVATE_CONNECTOR:\n      {\n        var connector = payload.connector,\n            provider = payload.provider,\n            chainId = payload.chainId,\n            account = payload.account,\n            onError = payload.onError;\n        return {\n          connector: connector,\n          provider: provider,\n          chainId: chainId,\n          account: account,\n          onError: onError\n        };\n      }\n\n    case ActionType.UPDATE:\n      {\n        var _provider = payload.provider,\n            _chainId2 = payload.chainId,\n            _account2 = payload.account;\n        return _extends({}, state, _provider === undefined ? {} : {\n          provider: _provider\n        }, _chainId2 === undefined ? {} : {\n          chainId: _chainId2\n        }, _account2 === undefined ? {} : {\n          account: _account2\n        });\n      }\n\n    case ActionType.UPDATE_FROM_ERROR:\n      {\n        var _provider2 = payload.provider,\n            _chainId3 = payload.chainId,\n            _account3 = payload.account;\n        return _extends({}, state, _provider2 === undefined ? {} : {\n          provider: _provider2\n        }, _chainId3 === undefined ? {} : {\n          chainId: _chainId3\n        }, _account3 === undefined ? {} : {\n          account: _account3\n        }, {\n          error: undefined\n        });\n      }\n\n    case ActionType.ERROR:\n      {\n        var error = payload.error;\n        var _connector = state.connector,\n            _onError = state.onError;\n        return {\n          connector: _connector,\n          error: error,\n          onError: _onError\n        };\n      }\n\n    case ActionType.ERROR_FROM_ACTIVATION:\n      {\n        var _connector2 = payload.connector,\n            _error = payload.error;\n        return {\n          connector: _connector2,\n          error: _error\n        };\n      }\n\n    case ActionType.DEACTIVATE_CONNECTOR:\n      {\n        return {};\n      }\n  }\n}\n\nfunction useWeb3ReactManager() {\n  var _useReducer = useReducer(reducer, {}),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var connector = state.connector,\n      provider = state.provider,\n      chainId = state.chainId,\n      account = state.account,\n      onError = state.onError,\n      error = state.error;\n  var updateBusterRef = useRef(-1);\n  updateBusterRef.current += 1;\n  var activate = useCallback(function (connector, onError, throwErrors) {\n    if (throwErrors === void 0) {\n      throwErrors = false;\n    }\n\n    try {\n      var updateBusterInitial = updateBusterRef.current;\n      var activated = false;\n      return Promise.resolve(_catch(function () {\n        return Promise.resolve(connector.activate().then(function (update) {\n          activated = true;\n          return update;\n        })).then(function (update) {\n          return Promise.resolve(augmentConnectorUpdate(connector, update)).then(function (augmentedUpdate) {\n            if (updateBusterRef.current > updateBusterInitial) {\n              throw new StaleConnectorError();\n            }\n\n            dispatch({\n              type: ActionType.ACTIVATE_CONNECTOR,\n              payload: _extends({\n                connector: connector\n              }, augmentedUpdate, {\n                onError: onError\n              })\n            });\n          });\n        });\n      }, function (error) {\n        if (error instanceof StaleConnectorError) {\n          activated && connector.deactivate();\n          process.env.NODE_ENV !== \"production\" ? warning(false, \"Suppressed stale connector activation \" + connector) : void 0;\n        } else if (throwErrors) {\n          activated && connector.deactivate();\n          throw error;\n        } else if (onError) {\n          activated && connector.deactivate();\n          onError(error);\n        } else {\n          // we don't call activated && connector.deactivate() here because it'll be handled in the useEffect\n          dispatch({\n            type: ActionType.ERROR_FROM_ACTIVATION,\n            payload: {\n              connector: connector,\n              error: error\n            }\n          });\n        }\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, []);\n  var setError = useCallback(function (error) {\n    dispatch({\n      type: ActionType.ERROR,\n      payload: {\n        error: error\n      }\n    });\n  }, []);\n  var deactivate = useCallback(function () {\n    dispatch({\n      type: ActionType.DEACTIVATE_CONNECTOR\n    });\n  }, []);\n  var handleUpdate = useCallback(function (update) {\n    try {\n      if (!connector) {\n        throw Error(\"This should never happen, it's just so Typescript stops complaining\");\n      }\n\n      var updateBusterInitial = updateBusterRef.current; // updates are handled differently depending on whether the connector is active vs in an error state\n\n      return Promise.resolve(function () {\n        if (!error) {\n          var _chainId4 = update.chainId === undefined ? undefined : normalizeChainId(update.chainId);\n\n          if (_chainId4 !== undefined && !!connector.supportedChainIds && !connector.supportedChainIds.includes(_chainId4)) {\n            var _error2 = new UnsupportedChainIdError(_chainId4, connector.supportedChainIds);\n\n            onError ? onError(_error2) : dispatch({\n              type: ActionType.ERROR,\n              payload: {\n                error: _error2\n              }\n            });\n          } else {\n            var _account4 = typeof update.account === 'string' ? normalizeAccount(update.account) : update.account;\n\n            dispatch({\n              type: ActionType.UPDATE,\n              payload: {\n                provider: update.provider,\n                chainId: _chainId4,\n                account: _account4\n              }\n            });\n          }\n        } else {\n          return _catch(function () {\n            return Promise.resolve(augmentConnectorUpdate(connector, update)).then(function (augmentedUpdate) {\n              if (updateBusterRef.current > updateBusterInitial) {\n                throw new StaleConnectorError();\n              }\n\n              dispatch({\n                type: ActionType.UPDATE_FROM_ERROR,\n                payload: augmentedUpdate\n              });\n            });\n          }, function (error) {\n            if (error instanceof StaleConnectorError) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, \"Suppressed stale connector update from error state \" + connector + \" \" + update) : void 0;\n            } else {\n              // though we don't have to, we're re-circulating the new error\n              onError ? onError(error) : dispatch({\n                type: ActionType.ERROR,\n                payload: {\n                  error: error\n                }\n              });\n            }\n          });\n        }\n      }());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, [connector, error, onError]);\n  var handleError = useCallback(function (error) {\n    onError ? onError(error) : dispatch({\n      type: ActionType.ERROR,\n      payload: {\n        error: error\n      }\n    });\n  }, [onError]);\n  var handleDeactivate = useCallback(function () {\n    dispatch({\n      type: ActionType.DEACTIVATE_CONNECTOR\n    });\n  }, []); // ensure that connectors which were set are deactivated\n\n  useEffect(function () {\n    return function () {\n      if (connector) {\n        connector.deactivate();\n      }\n    };\n  }, [connector]); // ensure that events emitted from the set connector are handled appropriately\n\n  useEffect(function () {\n    if (connector) {\n      connector.on(ConnectorEvent.Update, handleUpdate).on(ConnectorEvent.Error, handleError).on(ConnectorEvent.Deactivate, handleDeactivate);\n    }\n\n    return function () {\n      if (connector) {\n        connector.off(ConnectorEvent.Update, handleUpdate).off(ConnectorEvent.Error, handleError).off(ConnectorEvent.Deactivate, handleDeactivate);\n      }\n    };\n  }, [connector, handleUpdate, handleError, handleDeactivate]);\n  return {\n    connector: connector,\n    provider: provider,\n    chainId: chainId,\n    account: account,\n    activate: activate,\n    setError: setError,\n    deactivate: deactivate,\n    error: error\n  };\n}\n\nvar PRIMARY_KEY = 'primary';\nvar CONTEXTS = {};\n\nfunction createWeb3ReactRoot(key) {\n  !!CONTEXTS[key] ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"A root already exists for provided key \" + key) : invariant(false) : void 0;\n  CONTEXTS[key] = createContext({\n    activate: function () {\n      try {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'No <Web3ReactProvider ... /> found.') : invariant(false) : void 0;\n        return Promise.resolve();\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    },\n    setError: function setError() {\n      process.env.NODE_ENV !== \"production\" ? invariant(false, 'No <Web3ReactProvider ... /> found.') : invariant(false);\n    },\n    deactivate: function deactivate() {\n      process.env.NODE_ENV !== \"production\" ? invariant(false, 'No <Web3ReactProvider ... /> found.') : invariant(false);\n    },\n    active: false\n  });\n  CONTEXTS[key].displayName = \"Web3ReactContext - \" + key;\n  var Provider = CONTEXTS[key].Provider;\n  return function Web3ReactProvider(_ref) {\n    var getLibrary = _ref.getLibrary,\n        children = _ref.children;\n\n    var _useWeb3ReactManager = useWeb3ReactManager(),\n        connector = _useWeb3ReactManager.connector,\n        provider = _useWeb3ReactManager.provider,\n        chainId = _useWeb3ReactManager.chainId,\n        account = _useWeb3ReactManager.account,\n        activate = _useWeb3ReactManager.activate,\n        setError = _useWeb3ReactManager.setError,\n        deactivate = _useWeb3ReactManager.deactivate,\n        error = _useWeb3ReactManager.error;\n\n    var active = connector !== undefined && chainId !== undefined && account !== undefined && !!!error;\n    var library = useMemo(function () {\n      return active && chainId !== undefined && Number.isInteger(chainId) && !!connector ? getLibrary(provider, connector) : undefined;\n    }, [active, getLibrary, provider, connector, chainId]);\n    var web3ReactContext = {\n      connector: connector,\n      library: library,\n      chainId: chainId,\n      account: account,\n      activate: activate,\n      setError: setError,\n      deactivate: deactivate,\n      active: active,\n      error: error\n    };\n    return React.createElement(Provider, {\n      value: web3ReactContext\n    }, children);\n  };\n}\n\nvar Web3ReactProvider = /*#__PURE__*/createWeb3ReactRoot(PRIMARY_KEY);\n\nfunction getWeb3ReactContext(key) {\n  if (key === void 0) {\n    key = PRIMARY_KEY;\n  }\n\n  !Object.keys(CONTEXTS).includes(key) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Invalid key \" + key) : invariant(false) : void 0;\n  return CONTEXTS[key];\n}\n\nfunction useWeb3React(key) {\n  return useContext(getWeb3ReactContext(key));\n}\n\nexport { PRIMARY_KEY, UnsupportedChainIdError, Web3ReactProvider, createWeb3ReactRoot, getWeb3ReactContext, useWeb3React };","map":{"version":3,"mappings":"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","names":["_iteratorSymbol","Symbol","iterator","_asyncIteratorSymbol","asyncIterator","_catch","body","recover","result","e","then","normalizeChainId","chainId","replace","parsedChainId","Number","parseInt","trim","substring","isNaN","isInteger","normalizeAccount","_address","match","address","chars","toLowerCase","split","charsArray","Uint8Array","i","charCodeAt","hashed","arrayify","keccak256","toUpperCase","addressChecksum","join","augmentConnectorUpdate","connector","update","provider","Promise","all","undefined","getChainId","account","getAccount","_chainId","_account","supportedChainIds","includes","UnsupportedChainIdError","getProvider","StaleConnectorError","_this","name","constructor","Error","_inheritsLoose","unsupportedChainId","_this2","message","ActionType","reducer","state","type","payload","ACTIVATE_CONNECTOR","onError","UPDATE","UPDATE_FROM_ERROR","error","ERROR","ERROR_FROM_ACTIVATION","DEACTIVATE_CONNECTOR","useWeb3ReactManager","useReducer","dispatch","updateBusterRef","useRef","current","activate","useCallback","throwErrors","updateBusterInitial","activated","augmentedUpdate","deactivate","process","setError","handleUpdate","handleError","handleDeactivate","useEffect","on","ConnectorEvent","Update","Deactivate","off","PRIMARY_KEY","CONTEXTS","createWeb3ReactRoot","key","createContext","active","displayName","Provider","Web3ReactProvider","getLibrary","children","library","useMemo","web3ReactContext","React","value","getWeb3ReactContext","Object","keys","useWeb3React","useContext"],"sources":["/home/vukasin/Desktop/LuckySixFront/node_modules/node_modules/babel-plugin-transform-async-to-promises/helpers.js","/home/vukasin/Desktop/LuckySixFront/node_modules/@web3-react/core/src/normalizers.ts","/home/vukasin/Desktop/LuckySixFront/node_modules/@web3-react/core/src/manager.ts","/home/vukasin/Desktop/LuckySixFront/node_modules/@web3-react/core/src/provider.tsx"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { arrayify } from '@ethersproject/bytes'\nimport { keccak256 } from '@ethersproject/keccak256'\nimport invariant from 'tiny-invariant'\n\nexport function normalizeChainId(chainId: string | number): number {\n  if (typeof chainId === 'string') {\n    // Temporary fix until the next version of Metamask Mobile gets released.\n    // In the current version (0.2.13), the chainId starts with “Ox” rather\n    // than “0x”. Fix: https://github.com/MetaMask/metamask-mobile/pull/1275\n    chainId = chainId.replace(/^Ox/, '0x')\n\n    const parsedChainId = Number.parseInt(chainId, chainId.trim().substring(0, 2) === '0x' ? 16 : 10)\n    invariant(!Number.isNaN(parsedChainId), `chainId ${chainId} is not an integer`)\n    return parsedChainId\n  } else {\n    invariant(Number.isInteger(chainId), `chainId ${chainId} is not an integer`)\n    return chainId\n  }\n}\n\n// https://github.com/ethers-io/ethers.js/blob/d9d438a119bb11f8516fc9cf02c534ab3816fcb3/packages/address/src.ts/index.ts\nexport function normalizeAccount(_address: string): string {\n  invariant(typeof _address === 'string' && _address.match(/^(0x)?[0-9a-fA-F]{40}$/), `Invalid address ${_address}`)\n\n  const address = _address.substring(0, 2) === '0x' ? _address : `0x${_address}`\n  const chars = address\n    .toLowerCase()\n    .substring(2)\n    .split('')\n\n  const charsArray = new Uint8Array(40)\n  for (let i = 0; i < 40; i++) {\n    charsArray[i] = chars[i].charCodeAt(0)\n  }\n  const hashed = arrayify(keccak256(charsArray))\n\n  for (let i = 0; i < 40; i += 2) {\n    if (hashed[i >> 1] >> 4 >= 8) {\n      chars[i] = chars[i].toUpperCase()\n    }\n    if ((hashed[i >> 1] & 0x0f) >= 8) {\n      chars[i + 1] = chars[i + 1].toUpperCase()\n    }\n  }\n\n  const addressChecksum = `0x${chars.join('')}`\n\n  invariant(\n    !(address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && address !== addressChecksum),\n    `Bad address checksum ${address} ${addressChecksum}`\n  )\n\n  return addressChecksum\n}\n","import { useReducer, useEffect, useCallback, useRef } from 'react'\nimport { ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport warning from 'tiny-warning'\n\nimport { Web3ReactManagerReturn } from './types'\nimport { normalizeChainId, normalizeAccount } from './normalizers'\n\nclass StaleConnectorError extends Error {\n  constructor() {\n    super()\n    this.name = this.constructor.name\n  }\n}\n\nexport class UnsupportedChainIdError extends Error {\n  public constructor(unsupportedChainId: number, supportedChainIds?: readonly number[]) {\n    super()\n    this.name = this.constructor.name\n    this.message = `Unsupported chain id: ${unsupportedChainId}. Supported chain ids are: ${supportedChainIds}.`\n  }\n}\n\ninterface Web3ReactManagerState {\n  connector?: AbstractConnector\n  provider?: any\n  chainId?: number\n  account?: null | string\n\n  onError?: (error: Error) => void\n\n  error?: Error\n}\n\nenum ActionType {\n  ACTIVATE_CONNECTOR,\n  UPDATE,\n  UPDATE_FROM_ERROR,\n  ERROR,\n  ERROR_FROM_ACTIVATION,\n  DEACTIVATE_CONNECTOR\n}\n\ninterface Action {\n  type: ActionType\n  payload?: any\n}\n\nfunction reducer(state: Web3ReactManagerState, { type, payload }: Action): Web3ReactManagerState {\n  switch (type) {\n    case ActionType.ACTIVATE_CONNECTOR: {\n      const { connector, provider, chainId, account, onError } = payload\n      return { connector, provider, chainId, account, onError }\n    }\n    case ActionType.UPDATE: {\n      const { provider, chainId, account } = payload\n      return {\n        ...state,\n        ...(provider === undefined ? {} : { provider }),\n        ...(chainId === undefined ? {} : { chainId }),\n        ...(account === undefined ? {} : { account })\n      }\n    }\n    case ActionType.UPDATE_FROM_ERROR: {\n      const { provider, chainId, account } = payload\n      return {\n        ...state,\n        ...(provider === undefined ? {} : { provider }),\n        ...(chainId === undefined ? {} : { chainId }),\n        ...(account === undefined ? {} : { account }),\n        error: undefined\n      }\n    }\n    case ActionType.ERROR: {\n      const { error } = payload\n      const { connector, onError } = state\n      return {\n        connector,\n        error,\n        onError\n      }\n    }\n    case ActionType.ERROR_FROM_ACTIVATION: {\n      const { connector, error } = payload\n      return {\n        connector,\n        error\n      }\n    }\n    case ActionType.DEACTIVATE_CONNECTOR: {\n      return {}\n    }\n  }\n}\n\nasync function augmentConnectorUpdate(\n  connector: AbstractConnector,\n  update: ConnectorUpdate\n): Promise<ConnectorUpdate<number>> {\n  const provider = update.provider === undefined ? await connector.getProvider() : update.provider\n  const [_chainId, _account] = (await Promise.all([\n    update.chainId === undefined ? connector.getChainId() : update.chainId,\n    update.account === undefined ? connector.getAccount() : update.account\n  ])) as [Required<ConnectorUpdate>['chainId'], Required<ConnectorUpdate>['account']]\n\n  const chainId = normalizeChainId(_chainId)\n  if (!!connector.supportedChainIds && !connector.supportedChainIds.includes(chainId)) {\n    throw new UnsupportedChainIdError(chainId, connector.supportedChainIds)\n  }\n  const account = _account === null ? _account : normalizeAccount(_account)\n\n  return { provider, chainId, account }\n}\n\nexport function useWeb3ReactManager(): Web3ReactManagerReturn {\n  const [state, dispatch] = useReducer(reducer, {})\n  const { connector, provider, chainId, account, onError, error } = state\n\n  const updateBusterRef = useRef(-1)\n  updateBusterRef.current += 1\n\n  const activate = useCallback(\n    async (\n      connector: AbstractConnector,\n      onError?: (error: Error) => void,\n      throwErrors: boolean = false\n    ): Promise<void> => {\n      const updateBusterInitial = updateBusterRef.current\n\n      let activated = false\n      try {\n        const update = await connector.activate().then(\n          (update): ConnectorUpdate => {\n            activated = true\n            return update\n          }\n        )\n\n        const augmentedUpdate = await augmentConnectorUpdate(connector, update)\n\n        if (updateBusterRef.current > updateBusterInitial) {\n          throw new StaleConnectorError()\n        }\n        dispatch({ type: ActionType.ACTIVATE_CONNECTOR, payload: { connector, ...augmentedUpdate, onError } })\n      } catch (error) {\n        if (error instanceof StaleConnectorError) {\n          activated && connector.deactivate()\n          warning(false, `Suppressed stale connector activation ${connector}`)\n        } else if (throwErrors) {\n          activated && connector.deactivate()\n          throw error\n        } else if (onError) {\n          activated && connector.deactivate()\n          onError(error)\n        } else {\n          // we don't call activated && connector.deactivate() here because it'll be handled in the useEffect\n          dispatch({ type: ActionType.ERROR_FROM_ACTIVATION, payload: { connector, error } })\n        }\n      }\n    },\n    []\n  )\n\n  const setError = useCallback((error: Error): void => {\n    dispatch({ type: ActionType.ERROR, payload: { error } })\n  }, [])\n\n  const deactivate = useCallback((): void => {\n    dispatch({ type: ActionType.DEACTIVATE_CONNECTOR })\n  }, [])\n\n  const handleUpdate = useCallback(\n    async (update: ConnectorUpdate): Promise<void> => {\n      if (!connector) {\n        throw Error(\"This should never happen, it's just so Typescript stops complaining\")\n      }\n\n      const updateBusterInitial = updateBusterRef.current\n\n      // updates are handled differently depending on whether the connector is active vs in an error state\n      if (!error) {\n        const chainId = update.chainId === undefined ? undefined : normalizeChainId(update.chainId)\n        if (chainId !== undefined && !!connector.supportedChainIds && !connector.supportedChainIds.includes(chainId)) {\n          const error = new UnsupportedChainIdError(chainId, connector.supportedChainIds)\n          onError ? onError(error) : dispatch({ type: ActionType.ERROR, payload: { error } })\n        } else {\n          const account = typeof update.account === 'string' ? normalizeAccount(update.account) : update.account\n          dispatch({ type: ActionType.UPDATE, payload: { provider: update.provider, chainId, account } })\n        }\n      } else {\n        try {\n          const augmentedUpdate = await augmentConnectorUpdate(connector, update)\n\n          if (updateBusterRef.current > updateBusterInitial) {\n            throw new StaleConnectorError()\n          }\n          dispatch({ type: ActionType.UPDATE_FROM_ERROR, payload: augmentedUpdate })\n        } catch (error) {\n          if (error instanceof StaleConnectorError) {\n            warning(false, `Suppressed stale connector update from error state ${connector} ${update}`)\n          } else {\n            // though we don't have to, we're re-circulating the new error\n            onError ? onError(error) : dispatch({ type: ActionType.ERROR, payload: { error } })\n          }\n        }\n      }\n    },\n    [connector, error, onError]\n  )\n  const handleError = useCallback(\n    (error: Error): void => {\n      onError ? onError(error) : dispatch({ type: ActionType.ERROR, payload: { error } })\n    },\n    [onError]\n  )\n  const handleDeactivate = useCallback((): void => {\n    dispatch({ type: ActionType.DEACTIVATE_CONNECTOR })\n  }, [])\n\n  // ensure that connectors which were set are deactivated\n  useEffect((): (() => void) => {\n    return () => {\n      if (connector) {\n        connector.deactivate()\n      }\n    }\n  }, [connector])\n\n  // ensure that events emitted from the set connector are handled appropriately\n  useEffect((): (() => void) => {\n    if (connector) {\n      connector\n        .on(ConnectorEvent.Update, handleUpdate)\n        .on(ConnectorEvent.Error, handleError)\n        .on(ConnectorEvent.Deactivate, handleDeactivate)\n    }\n\n    return () => {\n      if (connector) {\n        connector\n          .off(ConnectorEvent.Update, handleUpdate)\n          .off(ConnectorEvent.Error, handleError)\n          .off(ConnectorEvent.Deactivate, handleDeactivate)\n      }\n    }\n  }, [connector, handleUpdate, handleError, handleDeactivate])\n\n  return { connector, provider, chainId, account, activate, setError, deactivate, error }\n}\n","import React, { createContext, useContext, useMemo } from 'react'\nimport invariant from 'tiny-invariant'\n\nimport { Web3ReactContextInterface } from './types'\nimport { useWeb3ReactManager } from './manager'\n\nexport const PRIMARY_KEY = 'primary'\nconst CONTEXTS: { [key: string]: React.Context<Web3ReactContextInterface> } = {}\n\ninterface Web3ReactProviderArguments {\n  getLibrary: (provider?: any, connector?: Required<Web3ReactContextInterface>['connector']) => any\n  children: any\n}\n\nexport function createWeb3ReactRoot(key: string): (args: Web3ReactProviderArguments) => JSX.Element {\n  invariant(!CONTEXTS[key], `A root already exists for provided key ${key}`)\n\n  CONTEXTS[key] = createContext<Web3ReactContextInterface>({\n    activate: async () => {\n      invariant(false, 'No <Web3ReactProvider ... /> found.')\n    },\n    setError: () => {\n      invariant(false, 'No <Web3ReactProvider ... /> found.')\n    },\n    deactivate: () => {\n      invariant(false, 'No <Web3ReactProvider ... /> found.')\n    },\n    active: false\n  })\n  CONTEXTS[key].displayName = `Web3ReactContext - ${key}`\n\n  const Provider = CONTEXTS[key].Provider\n\n  return function Web3ReactProvider({ getLibrary, children }: Web3ReactProviderArguments): JSX.Element {\n    const {\n      connector,\n      provider,\n      chainId,\n      account,\n\n      activate,\n      setError,\n      deactivate,\n\n      error\n    } = useWeb3ReactManager()\n\n    const active = connector !== undefined && chainId !== undefined && account !== undefined && !!!error\n    const library = useMemo(\n      () =>\n        active && chainId !== undefined && Number.isInteger(chainId) && !!connector\n          ? getLibrary(provider, connector)\n          : undefined,\n      [active, getLibrary, provider, connector, chainId]\n    )\n\n    const web3ReactContext: Web3ReactContextInterface = {\n      connector,\n      library,\n      chainId,\n      account,\n\n      activate,\n      setError,\n      deactivate,\n\n      active,\n      error\n    }\n\n    return <Provider value={web3ReactContext}>{children}</Provider>\n  }\n}\n\nexport const Web3ReactProvider = createWeb3ReactRoot(PRIMARY_KEY)\n\nexport function getWeb3ReactContext<T = any>(key: string = PRIMARY_KEY): React.Context<Web3ReactContextInterface<T>> {\n  invariant(Object.keys(CONTEXTS).includes(key), `Invalid key ${key}`)\n  return CONTEXTS[key]\n}\n\nexport function useWeb3React<T = any>(key?: string): Web3ReactContextInterface<T> {\n  return useContext(getWeb3ReactContext(key))\n}\n"]},"metadata":{},"sourceType":"module"}