{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useWeb3React } from \"@web3-react/core\";\nimport { ethers } from \"ethers\";\nimport LuckySix from \"../dependencies/LuckySix.json\";\nimport contractsMap from \"../contractsMap.json\";\nconst defaultId = 4;\nexport const PublicFunctions = () => {\n  _s();\n\n  const {\n    library,\n    chainId\n  } = useWeb3React();\n  const {\n    abi\n  } = LuckySix;\n\n  async function _enterLottery(list, value) {\n    const signer = library.getSigner();\n    const contractAddress = contractsMap[Number(chainId)][\"ContractAddress\"];\n    const contract = new ethers.Contract(contractAddress, abi, signer);\n    const options = {\n      value: ethers.utils.parseEther(value)\n    };\n\n    try {\n      console.log(await contract.enterLottery(list, options));\n    } catch (ex) {\n      console.log(\"FATAL\");\n      console.log(ex);\n    }\n  }\n\n  async function _getDrawnNumbers() {\n    const defaultChainId = typeof chainId === \"undefined\" ? defaultId : Number(chainId);\n    const contractAddress = contractsMap[defaultChainId][\"ContractAddress\"];\n    const provider = contractsMap[defaultChainId][\"Provider\"];\n    const contract = new ethers.Contract(contractAddress, abi, ethers.getDefaultProvider(provider));\n\n    try {\n      return await contract.getDrawnNumbers();\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function _getState() {\n    const defaultChainId = typeof chainId === \"undefined\" ? defaultId : Number(chainId);\n    const contractAddress = contractsMap[defaultChainId][\"ContractAddress\"];\n    const provider = contractsMap[defaultChainId][\"Provider\"];\n    const contract = new ethers.Contract(contractAddress, abi, ethers.getDefaultProvider(provider));\n\n    try {\n      return Number(await contract.lottery_state());\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  return {\n    _enterLottery,\n    _getDrawnNumbers,\n    _getState\n  };\n};\n\n_s(PublicFunctions, \"d3l4A9E8KOZ6/4P6Y30b0Wx7vVk=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = PublicFunctions;\nexport default PublicFunctions;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicFunctions\");","map":{"version":3,"sources":["/home/vukasin/Desktop/LuckySixFront/src/hooks/hookMain.tsx"],"names":["useWeb3React","ethers","LuckySix","contractsMap","defaultId","PublicFunctions","library","chainId","abi","_enterLottery","list","value","signer","getSigner","contractAddress","Number","contract","Contract","options","utils","parseEther","console","log","enterLottery","ex","_getDrawnNumbers","defaultChainId","provider","getDefaultProvider","getDrawnNumbers","_getState","lottery_state"],"mappings":";;AAAA,SAAQA,YAAR,QAA2B,kBAA3B;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,MAAMC,SAAS,GAAG,CAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAEjC,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBP,YAAY,EAAvC;AAEA,QAAM;AAACQ,IAAAA;AAAD,MAAQN,QAAd;;AAEA,iBAAeO,aAAf,CAA6BC,IAA7B,EAAmCC,KAAnC,EAAyC;AACrC,UAAMC,MAAM,GAAGN,OAAO,CAACO,SAAR,EAAf;AAEA,UAAMC,eAAe,GAAGX,YAAY,CAACY,MAAM,CAACR,OAAD,CAAP,CAAZ,CAA8B,iBAA9B,CAAxB;AACA,UAAMS,QAAQ,GAAG,IAAIf,MAAM,CAACgB,QAAX,CAAoBH,eAApB,EAAqCN,GAArC,EAA0CI,MAA1C,CAAjB;AACA,UAAMM,OAAO,GAAG;AAACP,MAAAA,KAAK,EAAEV,MAAM,CAACkB,KAAP,CAAaC,UAAb,CAAwBT,KAAxB;AAAR,KAAhB;;AAEA,QAAG;AACCU,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAMN,QAAQ,CAACO,YAAT,CAAsBb,IAAtB,EAA4BQ,OAA5B,CAAlB;AACH,KAFD,CAEC,OAAMM,EAAN,EAAS;AACNH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ;AACH;AACJ;;AAED,iBAAeC,gBAAf,GAAiC;AAC7B,UAAMC,cAAc,GAAG,OAAOnB,OAAP,KAAmB,WAAnB,GAAiCH,SAAjC,GAA6CW,MAAM,CAACR,OAAD,CAA1E;AACA,UAAMO,eAAe,GAAGX,YAAY,CAACuB,cAAD,CAAZ,CAA6B,iBAA7B,CAAxB;AACA,UAAMC,QAAQ,GAAGxB,YAAY,CAACuB,cAAD,CAAZ,CAA6B,UAA7B,CAAjB;AACA,UAAMV,QAAQ,GAAG,IAAIf,MAAM,CAACgB,QAAX,CAAoBH,eAApB,EAAqCN,GAArC,EAA0CP,MAAM,CAAC2B,kBAAP,CAA0BD,QAA1B,CAA1C,CAAjB;;AACA,QAAG;AACC,aAAO,MAAMX,QAAQ,CAACa,eAAT,EAAb;AACH,KAFD,CAEC,OAAML,EAAN,EAAS;AACNH,MAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ;AACH;AACJ;;AAED,iBAAeM,SAAf,GAA0B;AACtB,UAAMJ,cAAc,GAAG,OAAOnB,OAAP,KAAmB,WAAnB,GAAiCH,SAAjC,GAA6CW,MAAM,CAACR,OAAD,CAA1E;AACA,UAAMO,eAAe,GAAGX,YAAY,CAACuB,cAAD,CAAZ,CAA6B,iBAA7B,CAAxB;AACA,UAAMC,QAAQ,GAAGxB,YAAY,CAACuB,cAAD,CAAZ,CAA6B,UAA7B,CAAjB;AACA,UAAMV,QAAQ,GAAG,IAAIf,MAAM,CAACgB,QAAX,CAAoBH,eAApB,EAAqCN,GAArC,EAA0CP,MAAM,CAAC2B,kBAAP,CAA0BD,QAA1B,CAA1C,CAAjB;;AACA,QAAG;AACC,aAAOZ,MAAM,CAAC,MAAMC,QAAQ,CAACe,aAAT,EAAP,CAAb;AACH,KAFD,CAEC,OAAMP,EAAN,EAAS;AACNH,MAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ;AACH;AACJ;;AAED,SAAO;AAACf,IAAAA,aAAD;AAAgBgB,IAAAA,gBAAhB;AAAkCK,IAAAA;AAAlC,GAAP;AACH,CA9CM;;GAAMzB,e;UAEkBL,Y;;;KAFlBK,e;AAgDb,eAAeA,eAAf","sourcesContent":["import {useWeb3React} from \"@web3-react/core\"\nimport {ethers} from \"ethers\"\nimport LuckySix from \"../dependencies/LuckySix.json\"\nimport contractsMap from \"../contractsMap.json\"\n\nconst defaultId = 4\n\nexport const PublicFunctions = () => {\n\n    const {library, chainId} = useWeb3React()\n\n    const {abi} = LuckySix\n\n    async function _enterLottery(list, value){\n        const signer = library.getSigner()\n\n        const contractAddress = contractsMap[Number(chainId)][\"ContractAddress\"]\n        const contract = new ethers.Contract(contractAddress, abi, signer)\n        const options = {value: ethers.utils.parseEther(value)}\n\n        try{\n            console.log(await contract.enterLottery(list, options))\n        }catch(ex){\n            console.log(\"FATAL\")\n            console.log(ex)\n        }\n    }\n\n    async function _getDrawnNumbers(){\n        const defaultChainId = typeof chainId === \"undefined\" ? defaultId : Number(chainId)\n        const contractAddress = contractsMap[defaultChainId][\"ContractAddress\"]\n        const provider = contractsMap[defaultChainId][\"Provider\"]\n        const contract = new ethers.Contract(contractAddress, abi, ethers.getDefaultProvider(provider))\n        try{\n            return await contract.getDrawnNumbers()\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n\n    async function _getState(){\n        const defaultChainId = typeof chainId === \"undefined\" ? defaultId : Number(chainId)\n        const contractAddress = contractsMap[defaultChainId][\"ContractAddress\"]\n        const provider = contractsMap[defaultChainId][\"Provider\"]\n        const contract = new ethers.Contract(contractAddress, abi, ethers.getDefaultProvider(provider))\n        try{\n            return Number(await contract.lottery_state())\n        }catch(ex){\n            console.log(ex)\n        }\n    }\n\n    return {_enterLottery, _getDrawnNumbers, _getState}\n}\n\nexport default PublicFunctions"]},"metadata":{},"sourceType":"module"}