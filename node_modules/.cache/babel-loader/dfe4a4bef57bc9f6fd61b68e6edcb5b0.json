{"ast":null,"code":"var _jsxFileName = \"/home/vukasin/Desktop/LuckySixFront/src/components/Header.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEthers } from \"@usedapp/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Header = () => {\n  _s();\n\n  const {\n    account,\n    activateBrowserWallet,\n    deactivate\n  } = useEthers();\n  const isConnected = account !== null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Blaa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Bla\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"P5qPDOv9aLJjN3XuTfXD4m61qrI=\", false, function () {\n  return [useEthers];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/vukasin/Desktop/LuckySixFront/src/components/Header.tsx"],"names":["useEthers","Header","account","activateBrowserWallet","deactivate","isConnected"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,eAAxB;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAExB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,qBAAV;AAAiCC,IAAAA;AAAjC,MAA+CJ,SAAS,EAA9D;AAEA,QAAMK,WAAW,GAAIH,OAAO,KAAK,IAAjC;AAEA,sBACI;AAAA,2BACI;AAAA,gBAEQG,WAAW,gBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,gBAGP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAnBM;;GAAMJ,M;UAE4CD,S;;;KAF5CC,M","sourcesContent":["import {useEthers} from \"@usedapp/core\";\n\nexport const Header = () => {\n\n    const {account, activateBrowserWallet, deactivate} = useEthers()\n\n    const isConnected = (account !== null)\n\n    return(\n        <div>\n            <div>\n                {\n                    isConnected ? (\n                        <div>Blaa</div>\n                    ) : (\n                        <div>Bla</div>\n                    )\n                }\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}