{"ast":null,"code":"import { useEffect, useMemo } from 'react';\nimport { useChainState } from '../providers';\nexport function useRawCalls(calls) {\n  const {\n    dispatchCalls,\n    value\n  } = useChainState();\n  useEffect(() => {\n    const filteredCalls = calls.filter(Boolean);\n    dispatchCalls({\n      type: 'ADD_CALLS',\n      calls: filteredCalls\n    });\n    return () => dispatchCalls({\n      type: 'REMOVE_CALLS',\n      calls: filteredCalls\n    });\n  }, [JSON.stringify(calls), dispatchCalls]);\n  return useMemo(() => calls.map(call => {\n    var _a, _b;\n\n    if (call && value) {\n      return (_b = (_a = value.state) === null || _a === void 0 ? void 0 : _a[call.address]) === null || _b === void 0 ? void 0 : _b[call.data];\n    }\n  }), [JSON.stringify(calls), value]);\n}\nexport function useRawCall(call) {\n  return useRawCalls([call])[0];\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,OAAnC;AACA,SAAwBC,aAAxB,QAA6C,cAA7C;AAIA,OAAM,SAAUC,WAAV,CAAsBC,KAAtB,EAAgD;AACpD,QAAM;AAAEC,iBAAF;AAAiBC;AAAjB,MAA2BJ,aAAa,EAA9C;AAEAF,WAAS,CAAC,MAAK;AACb,UAAMO,aAAa,GAAGH,KAAK,CAACI,MAAN,CAAaC,OAAb,CAAtB;AACAJ,iBAAa,CAAC;AAAEK,UAAI,EAAE,WAAR;AAAqBN,WAAK,EAAEG;AAA5B,KAAD,CAAb;AACA,WAAO,MAAMF,aAAa,CAAC;AAAEK,UAAI,EAAE,cAAR;AAAwBN,WAAK,EAAEG;AAA/B,KAAD,CAA1B;AACD,GAJQ,EAIN,CAACI,IAAI,CAACC,SAAL,CAAeR,KAAf,CAAD,EAAwBC,aAAxB,CAJM,CAAT;AAMA,SAAOJ,OAAO,CACZ,MACEG,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAS;;;AACjB,QAAIA,IAAI,IAAIR,KAAZ,EAAmB;AACjB,yBAAOA,KAAK,CAACS,KAAb,MAAkB,IAAlB,IAAkBC,aAAlB,GAAkB,MAAlB,GAAkBA,GAAGF,IAAI,CAACG,OAAR,CAAlB,MAAiC,IAAjC,IAAiCC,aAAjC,GAAiC,MAAjC,GAAiCA,GAAIJ,IAAI,CAACK,IAAT,CAAjC;AACD;AACF,GAJD,CAFU,EAOZ,CAACR,IAAI,CAACC,SAAL,CAAeR,KAAf,CAAD,EAAwBE,KAAxB,CAPY,CAAd;AASD;AAED,OAAM,SAAUc,UAAV,CAAqBN,IAArB,EAA0C;AAC9C,SAAOX,WAAW,CAAC,CAACW,IAAD,CAAD,CAAX,CAAoB,CAApB,CAAP;AACD","names":["useEffect","useMemo","useChainState","useRawCalls","calls","dispatchCalls","value","filteredCalls","filter","Boolean","type","JSON","stringify","map","call","state","_a","address","_b","data","useRawCall"],"sources":["/home/vukasin/Desktop/LuckySixFront/node_modules/@usedapp/core/src/hooks/useRawCalls.ts"],"sourcesContent":["import { useEffect, useMemo } from 'react'\nimport { RawCallResult, useChainState } from '../providers'\nimport { RawCall } from '../providers'\nimport { Falsy } from '../model/types'\n\nexport function useRawCalls(calls: (RawCall | Falsy)[]): RawCallResult[] {\n  const { dispatchCalls, value } = useChainState()\n\n  useEffect(() => {\n    const filteredCalls = calls.filter(Boolean) as RawCall[]\n    dispatchCalls({ type: 'ADD_CALLS', calls: filteredCalls })\n    return () => dispatchCalls({ type: 'REMOVE_CALLS', calls: filteredCalls })\n  }, [JSON.stringify(calls), dispatchCalls])\n\n  return useMemo(\n    () =>\n      calls.map((call) => {\n        if (call && value) {\n          return value.state?.[call.address]?.[call.data]\n        }\n      }),\n    [JSON.stringify(calls), value]\n  )\n}\n\nexport function useRawCall(call: RawCall | Falsy) {\n  return useRawCalls([call])[0]\n}\n"]},"metadata":{},"sourceType":"module"}